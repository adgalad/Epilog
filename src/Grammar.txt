-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Language/Epilog/Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Program                           (0)
	Program -> TopDecs                                 (1)
	TopDecs -> TopDec                                  (2)
	TopDecs -> TopDec TopDecs                          (3)
	TopDec -> proc GenId "(" Params ")" ":-" Insts "."   (4)
	TopDec -> either GenId ":-" Decs "."               (5)
	TopDec -> record GenId ":-" Decs "."               (6)
	TopDec -> Declaration "."                          (7)
	TopDec -> Initialization "."                       (8)
	GenId -> genId                                     (9)
	Params ->                                          (10)
	Params -> Decs                                     (11)
	Decs -> Declaration                                (12)
	Decs -> Declaration "," Decs                       (13)
	Insts -> Inst                                      (14)
	Insts -> Inst "," Insts                            (15)
	Inst -> Declaration                                (16)
	Inst -> Initialization                             (17)
	Inst -> Assign                                     (18)
	Inst -> Call                                       (19)
	Inst -> If                                         (20)
	Inst -> Case                                       (21)
	Inst -> For                                        (22)
	Inst -> While                                      (23)
	Inst -> read Lval                                  (24)
	Inst -> write Exp                                  (25)
	Inst -> finish                                     (26)
	Declaration -> Type VarId                          (27)
	Initialization -> Type VarId is Exp                (28)
	Type -> Atom                                       (29)
	Type -> Atom ":" ArraySize                         (30)
	Atom -> bool                                       (31)
	Atom -> char                                       (32)
	Atom -> float                                      (33)
	Atom -> int                                        (34)
	Atom -> string                                     (35)
	Atom -> GenId                                      (36)
	ArraySize -> Int                                   (37)
	ArraySize -> Int ":" ArraySize                     (38)
	Assign -> Lval is Exp                              (39)
	Lval -> VarId                                      (40)
	Lval -> Lval "_" VarId                             (41)
	Lval -> Lval ":" Exp                               (42)
	VarId -> varId                                     (43)
	Call -> GenId "(" Args ")"                         (44)
	Args ->                                            (45)
	Args -> Args1                                      (46)
	Args1 -> Exp                                       (47)
	Args1 -> Exp "," Args1                             (48)
	If -> if Guards end                                (49)
	Guards -> Guard                                    (50)
	Guards -> Guard ";" Guards                         (51)
	Guard -> Exp "->" Insts                            (52)
	Case -> case Exp of Sets end                       (53)
	Sets -> Set                                        (54)
	Sets -> Set ";" Sets                               (55)
	Exps -> Exp                                        (56)
	Exps -> Exp "," Exps                               (57)
	Set -> Exps "->" Insts                             (58)
	For -> for VarId Ranges end                        (59)
	For -> for Declaration Ranges end                  (60)
	Ranges -> Range                                    (61)
	Ranges -> Range ";" Ranges                         (62)
	Range -> from Exp to Exp "->" Insts                (63)
	While -> while Conds end                           (64)
	Conds -> Cond                                      (65)
	Conds -> Cond ";" Conds                            (66)
	Cond -> Exp "->" Insts                             (67)
	Exp -> "(" Exp ")"                                 (68)
	Exp -> Bool                                        (69)
	Exp -> Char                                        (70)
	Exp -> Int                                         (71)
	Exp -> Float                                       (72)
	Exp -> String                                      (73)
	Exp -> otherwise                                   (74)
	Exp -> VarId                                       (75)
	Exp -> toBoolean Exp                               (76)
	Exp -> toCharacter Exp                             (77)
	Exp -> toFloat Exp                                 (78)
	Exp -> toInteger Exp                               (79)
	Exp -> Exp and Exp                                 (80)
	Exp -> Exp andalso Exp                             (81)
	Exp -> Exp or Exp                                  (82)
	Exp -> Exp orelse Exp                              (83)
	Exp -> Exp xor Exp                                 (84)
	Exp -> not Exp                                     (85)
	Exp -> Exp band Exp                                (86)
	Exp -> Exp bor Exp                                 (87)
	Exp -> Exp bsl Exp                                 (88)
	Exp -> Exp bsr Exp                                 (89)
	Exp -> Exp bxor Exp                                (90)
	Exp -> bnot Exp                                    (91)
	Exp -> Exp ":" Exp                                 (92)
	Exp -> Exp "_" Exp                                 (93)
	Exp -> length Exp                                  (94)
	Exp -> Exp "+" Exp                                 (95)
	Exp -> Exp "-" Exp                                 (96)
	Exp -> Exp "*" Exp                                 (97)
	Exp -> Exp "/" Exp                                 (98)
	Exp -> Exp div Exp                                 (99)
	Exp -> Exp rem Exp                                 (100)
	Exp -> "-" Exp                                     (101)
	Exp -> Exp "<" Exp                                 (102)
	Exp -> Exp "=<" Exp                                (103)
	Exp -> Exp ">" Exp                                 (104)
	Exp -> Exp ">=" Exp                                (105)
	Exp -> Exp "=" Exp                                 (106)
	Exp -> Exp "/=" Exp                                (107)
	Exp -> Exp "|" Exp                                 (108)
	Exp -> Exp "!|" Exp                                (109)
	Bool -> boolLit                                    (110)
	Char -> charLit                                    (111)
	Int -> intLit                                      (112)
	Float -> floatLit                                  (113)
	String -> stringLit                                (114)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	and            { TokenAnd     :@ _ }
	andalso        { TokenAndalso :@ _ }
	or             { TokenOr      :@ _ }
	orelse         { TokenOrelse  :@ _ }
	xor            { TokenXor     :@ _ }
	not            { TokenNot     :@ _ }
	band           { TokenBand :@ _ }
	bor            { TokenBor  :@ _ }
	bnot           { TokenBnot :@ _ }
	bsl            { TokenBxor :@ _ }
	bsr            { TokenBxor :@ _ }
	bxor           { TokenBxor :@ _ }
	length         { TokenLength     :@ _ }
	":"            { TokenColon      :@ _ }
	"_"            { TokenUnderscore :@ _ }
	"+"            { TokenPlus     :@ _ }
	"-"            { TokenMinus    :@ _ }
	"*"            { TokenTimes    :@ _ }
	"/"            { TokenFloatDiv :@ _ }
	div            { TokenIntDiv   :@ _ }
	rem            { TokenRem      :@ _ }
	"<"            { TokenLT :@ _ }
	"=<"           { TokenLE :@ _ }
	">"            { TokenGT :@ _ }
	">="           { TokenGE :@ _ }
	"="            { TokenEQ :@ _ }
	"/="           { TokenNE :@ _ }
	"|"            { TokenFA :@ _ }
	"!|"           { TokenNF :@ _ }
	end            { TokenEnd       :@ _ }
	for            { TokenFor       :@ _ }
	from           { TokenFrom      :@ _ }
	to             { TokenTo        :@ _ }
	if             { TokenIf        :@ _ }
	otherwise      { TokenOtherwise :@ _ }
	while          { TokenWhile     :@ _ }
	case           { TokenCase      :@ _ }
	of             { TokenOf        :@ _ }
	proc           { TokenProcedure :@ _ }
	":-"           { TokenDefine    :@ _ }
	finish         { TokenFinish    :@ _ }
	either         { TokenEither :@ _ }
	record         { TokenRecord :@ _ }
	toBoolean      { TokenToBool  :@ _ }
	toCharacter    { TokenToChar  :@ _ }
	toFloat        { TokenToFloat :@ _ }
	toInteger      { TokenToInt   :@ _ }
	bool           { TokenBoolType   :@ _ }
	char           { TokenCharType   :@ _ }
	int            { TokenIntType    :@ _ }
	float          { TokenFloatType  :@ _ }
	string         { TokenStringType :@ _ }
	","            { TokenComma     :@ _ }
	"."            { TokenPeriod    :@ _ }
	";"            { TokenSemicolon :@ _ }
	"->"           { TokenArrow     :@ _ }
	"("            { TokenLeftPar   :@ _ }
	")"            { TokenRightPar  :@ _ }
	is             { TokenIs :@ _ }
	read           { TokenRead  :@ _ }
	write          { TokenWrite :@ _ }
	boolLit        { TokenBoolLit   _ :@ _ }
	charLit        { TokenCharLit   _ :@ _ }
	intLit         { TokenIntLit    _ :@ _ }
	floatLit       { TokenFloatLit  _ :@ _ }
	stringLit      { TokenStringLit _ :@ _ }
	varId          { TokenVarId _ :@ _ }
	genId          { TokenGenId _ :@ _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Program         rule  1
	TopDecs         rules 2, 3
	TopDec          rules 4, 5, 6, 7, 8
	GenId           rule  9
	Params          rules 10, 11
	Decs            rules 12, 13
	Insts           rules 14, 15
	Inst            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
	Declaration     rule  27
	Initialization  rule  28
	Type            rules 29, 30
	Atom            rules 31, 32, 33, 34, 35, 36
	ArraySize       rules 37, 38
	Assign          rule  39
	Lval            rules 40, 41, 42
	VarId           rule  43
	Call            rule  44
	Args            rules 45, 46
	Args1           rules 47, 48
	If              rule  49
	Guards          rules 50, 51
	Guard           rule  52
	Case            rule  53
	Sets            rules 54, 55
	Exps            rules 56, 57
	Set             rule  58
	For             rules 59, 60
	Ranges          rules 61, 62
	Range           rule  63
	While           rule  64
	Conds           rules 65, 66
	Cond            rule  67
	Exp             rules 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109
	Bool            rule  110
	Char            rule  111
	Int             rule  112
	Float           rule  113
	String          rule  114

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	proc           shift, and enter state 9
	either         shift, and enter state 10
	record         shift, and enter state 11
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	genId          shift, and enter state 17

	Program        goto state 18
	TopDecs        goto state 2
	TopDec         goto state 3
	GenId          goto state 4
	Declaration    goto state 5
	Initialization goto state 6
	Type           goto state 7
	Atom           goto state 8

State 1


	proc           shift, and enter state 9
	either         shift, and enter state 10
	record         shift, and enter state 11
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	genId          shift, and enter state 17

	TopDecs        goto state 2
	TopDec         goto state 3
	GenId          goto state 4
	Declaration    goto state 5
	Initialization goto state 6
	Type           goto state 7
	Atom           goto state 8

State 2

	Program -> TopDecs .                                (rule 1)

	%eof           reduce using rule 1


State 3

	TopDecs -> TopDec .                                 (rule 2)
	TopDecs -> TopDec . TopDecs                         (rule 3)

	proc           shift, and enter state 9
	either         shift, and enter state 10
	record         shift, and enter state 11
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	genId          shift, and enter state 17
	%eof           reduce using rule 2

	TopDecs        goto state 27
	TopDec         goto state 3
	GenId          goto state 4
	Declaration    goto state 5
	Initialization goto state 6
	Type           goto state 7
	Atom           goto state 8

State 4

	Atom -> GenId .                                     (rule 36)

	":"            reduce using rule 36
	varId          reduce using rule 36


State 5

	TopDec -> Declaration . "."                         (rule 7)

	"."            shift, and enter state 26


State 6

	TopDec -> Initialization . "."                      (rule 8)

	"."            shift, and enter state 25


State 7

	Declaration -> Type . VarId                         (rule 27)
	Initialization -> Type . VarId is Exp               (rule 28)

	varId          shift, and enter state 24

	VarId          goto state 23

State 8

	Type -> Atom .                                      (rule 29)
	Type -> Atom . ":" ArraySize                        (rule 30)

	":"            shift, and enter state 22
	varId          reduce using rule 29


State 9

	TopDec -> proc . GenId "(" Params ")" ":-" Insts "."    (rule 4)

	genId          shift, and enter state 17

	GenId          goto state 21

State 10

	TopDec -> either . GenId ":-" Decs "."              (rule 5)

	genId          shift, and enter state 17

	GenId          goto state 20

State 11

	TopDec -> record . GenId ":-" Decs "."              (rule 6)

	genId          shift, and enter state 17

	GenId          goto state 19

State 12

	Atom -> bool .                                      (rule 31)

	":"            reduce using rule 31
	varId          reduce using rule 31


State 13

	Atom -> char .                                      (rule 32)

	":"            reduce using rule 32
	varId          reduce using rule 32


State 14

	Atom -> int .                                       (rule 34)

	":"            reduce using rule 34
	varId          reduce using rule 34


State 15

	Atom -> float .                                     (rule 33)

	":"            reduce using rule 33
	varId          reduce using rule 33


State 16

	Atom -> string .                                    (rule 35)

	":"            reduce using rule 35
	varId          reduce using rule 35


State 17

	GenId -> genId .                                    (rule 9)

	":"            reduce using rule 9
	":-"           reduce using rule 9
	"("            reduce using rule 9
	varId          reduce using rule 9


State 18

	%start_parser -> Program .                          (rule 0)

	%eof           accept


State 19

	TopDec -> record GenId . ":-" Decs "."              (rule 6)

	":-"           shift, and enter state 34


State 20

	TopDec -> either GenId . ":-" Decs "."              (rule 5)

	":-"           shift, and enter state 33


State 21

	TopDec -> proc GenId . "(" Params ")" ":-" Insts "."    (rule 4)

	"("            shift, and enter state 32


State 22

	Type -> Atom ":" . ArraySize                        (rule 30)

	intLit         shift, and enter state 31

	ArraySize      goto state 29
	Int            goto state 30

State 23

	Declaration -> Type VarId .                         (rule 27)
	Initialization -> Type VarId . is Exp               (rule 28)

	end            reduce using rule 27
	","            reduce using rule 27
	"."            reduce using rule 27
	";"            reduce using rule 27
	is             shift, and enter state 28


State 24

	VarId -> varId .                                    (rule 43)

	and            reduce using rule 43
	andalso        reduce using rule 43
	or             reduce using rule 43
	orelse         reduce using rule 43
	xor            reduce using rule 43
	band           reduce using rule 43
	bor            reduce using rule 43
	bsl            reduce using rule 43
	bsr            reduce using rule 43
	bxor           reduce using rule 43
	":"            reduce using rule 43
	"_"            reduce using rule 43
	"+"            reduce using rule 43
	"-"            reduce using rule 43
	"*"            reduce using rule 43
	"/"            reduce using rule 43
	div            reduce using rule 43
	rem            reduce using rule 43
	"<"            reduce using rule 43
	"=<"           reduce using rule 43
	">"            reduce using rule 43
	">="           reduce using rule 43
	"="            reduce using rule 43
	"/="           reduce using rule 43
	"|"            reduce using rule 43
	"!|"           reduce using rule 43
	end            reduce using rule 43
	from           reduce using rule 43
	to             reduce using rule 43
	of             reduce using rule 43
	","            reduce using rule 43
	"."            reduce using rule 43
	";"            reduce using rule 43
	"->"           reduce using rule 43
	")"            reduce using rule 43
	is             reduce using rule 43


State 25

	TopDec -> Initialization "." .                      (rule 8)

	proc           reduce using rule 8
	either         reduce using rule 8
	record         reduce using rule 8
	bool           reduce using rule 8
	char           reduce using rule 8
	int            reduce using rule 8
	float          reduce using rule 8
	string         reduce using rule 8
	genId          reduce using rule 8
	%eof           reduce using rule 8


State 26

	TopDec -> Declaration "." .                         (rule 7)

	proc           reduce using rule 7
	either         reduce using rule 7
	record         reduce using rule 7
	bool           reduce using rule 7
	char           reduce using rule 7
	int            reduce using rule 7
	float          reduce using rule 7
	string         reduce using rule 7
	genId          reduce using rule 7
	%eof           reduce using rule 7


State 27

	TopDecs -> TopDec TopDecs .                         (rule 3)

	%eof           reduce using rule 3


State 28

	Initialization -> Type VarId is . Exp               (rule 28)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 43
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 29

	Type -> Atom ":" ArraySize .                        (rule 30)

	varId          reduce using rule 30


State 30

	ArraySize -> Int .                                  (rule 37)
	ArraySize -> Int . ":" ArraySize                    (rule 38)

	":"            shift, and enter state 41
	varId          reduce using rule 37


State 31

	Int -> intLit .                                     (rule 112)

	and            reduce using rule 112
	andalso        reduce using rule 112
	or             reduce using rule 112
	orelse         reduce using rule 112
	xor            reduce using rule 112
	band           reduce using rule 112
	bor            reduce using rule 112
	bsl            reduce using rule 112
	bsr            reduce using rule 112
	bxor           reduce using rule 112
	":"            reduce using rule 112
	"_"            reduce using rule 112
	"+"            reduce using rule 112
	"-"            reduce using rule 112
	"*"            reduce using rule 112
	"/"            reduce using rule 112
	div            reduce using rule 112
	rem            reduce using rule 112
	"<"            reduce using rule 112
	"=<"           reduce using rule 112
	">"            reduce using rule 112
	">="           reduce using rule 112
	"="            reduce using rule 112
	"/="           reduce using rule 112
	"|"            reduce using rule 112
	"!|"           reduce using rule 112
	end            reduce using rule 112
	to             reduce using rule 112
	of             reduce using rule 112
	","            reduce using rule 112
	"."            reduce using rule 112
	";"            reduce using rule 112
	"->"           reduce using rule 112
	")"            reduce using rule 112
	is             reduce using rule 112
	varId          reduce using rule 112


State 32

	TopDec -> proc GenId "(" . Params ")" ":-" Insts "."    (rule 4)

	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	")"            reduce using rule 10
	genId          shift, and enter state 17

	GenId          goto state 4
	Params         goto state 39
	Decs           goto state 40
	Declaration    goto state 36
	Type           goto state 37
	Atom           goto state 8

State 33

	TopDec -> either GenId ":-" . Decs "."              (rule 5)

	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	genId          shift, and enter state 17

	GenId          goto state 4
	Decs           goto state 38
	Declaration    goto state 36
	Type           goto state 37
	Atom           goto state 8

State 34

	TopDec -> record GenId ":-" . Decs "."              (rule 6)

	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	genId          shift, and enter state 17

	GenId          goto state 4
	Decs           goto state 35
	Declaration    goto state 36
	Type           goto state 37
	Atom           goto state 8

State 35

	TopDec -> record GenId ":-" Decs . "."              (rule 6)

	"."            shift, and enter state 103


State 36

	Decs -> Declaration .                               (rule 12)
	Decs -> Declaration . "," Decs                      (rule 13)

	","            shift, and enter state 102
	"."            reduce using rule 12
	")"            reduce using rule 12


State 37

	Declaration -> Type . VarId                         (rule 27)

	varId          shift, and enter state 24

	VarId          goto state 101

State 38

	TopDec -> either GenId ":-" Decs . "."              (rule 5)

	"."            shift, and enter state 100


State 39

	TopDec -> proc GenId "(" Params . ")" ":-" Insts "."    (rule 4)

	")"            shift, and enter state 99


State 40

	Params -> Decs .                                    (rule 11)

	")"            reduce using rule 11


State 41

	ArraySize -> Int ":" . ArraySize                    (rule 38)

	intLit         shift, and enter state 31

	ArraySize      goto state 98
	Int            goto state 30

State 42

	Exp -> VarId .                                      (rule 75)

	and            reduce using rule 75
	andalso        reduce using rule 75
	or             reduce using rule 75
	orelse         reduce using rule 75
	xor            reduce using rule 75
	band           reduce using rule 75
	bor            reduce using rule 75
	bsl            reduce using rule 75
	bsr            reduce using rule 75
	bxor           reduce using rule 75
	":"            reduce using rule 75
	"_"            reduce using rule 75
	"+"            reduce using rule 75
	"-"            reduce using rule 75
	"*"            reduce using rule 75
	"/"            reduce using rule 75
	div            reduce using rule 75
	rem            reduce using rule 75
	"<"            reduce using rule 75
	"=<"           reduce using rule 75
	">"            reduce using rule 75
	">="           reduce using rule 75
	"="            reduce using rule 75
	"/="           reduce using rule 75
	"|"            reduce using rule 75
	"!|"           reduce using rule 75
	end            reduce using rule 75
	to             reduce using rule 75
	of             reduce using rule 75
	","            reduce using rule 75
	"."            reduce using rule 75
	";"            reduce using rule 75
	"->"           reduce using rule 75
	")"            reduce using rule 75
	is             reduce using rule 75


State 43

	Initialization -> Type VarId is Exp .               (rule 28)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 28
	","            reduce using rule 28
	"."            reduce using rule 28
	";"            reduce using rule 28


State 44

	Exp -> Bool .                                       (rule 69)

	and            reduce using rule 69
	andalso        reduce using rule 69
	or             reduce using rule 69
	orelse         reduce using rule 69
	xor            reduce using rule 69
	band           reduce using rule 69
	bor            reduce using rule 69
	bsl            reduce using rule 69
	bsr            reduce using rule 69
	bxor           reduce using rule 69
	":"            reduce using rule 69
	"_"            reduce using rule 69
	"+"            reduce using rule 69
	"-"            reduce using rule 69
	"*"            reduce using rule 69
	"/"            reduce using rule 69
	div            reduce using rule 69
	rem            reduce using rule 69
	"<"            reduce using rule 69
	"=<"           reduce using rule 69
	">"            reduce using rule 69
	">="           reduce using rule 69
	"="            reduce using rule 69
	"/="           reduce using rule 69
	"|"            reduce using rule 69
	"!|"           reduce using rule 69
	end            reduce using rule 69
	to             reduce using rule 69
	of             reduce using rule 69
	","            reduce using rule 69
	"."            reduce using rule 69
	";"            reduce using rule 69
	"->"           reduce using rule 69
	")"            reduce using rule 69
	is             reduce using rule 69


State 45

	Exp -> Char .                                       (rule 70)

	and            reduce using rule 70
	andalso        reduce using rule 70
	or             reduce using rule 70
	orelse         reduce using rule 70
	xor            reduce using rule 70
	band           reduce using rule 70
	bor            reduce using rule 70
	bsl            reduce using rule 70
	bsr            reduce using rule 70
	bxor           reduce using rule 70
	":"            reduce using rule 70
	"_"            reduce using rule 70
	"+"            reduce using rule 70
	"-"            reduce using rule 70
	"*"            reduce using rule 70
	"/"            reduce using rule 70
	div            reduce using rule 70
	rem            reduce using rule 70
	"<"            reduce using rule 70
	"=<"           reduce using rule 70
	">"            reduce using rule 70
	">="           reduce using rule 70
	"="            reduce using rule 70
	"/="           reduce using rule 70
	"|"            reduce using rule 70
	"!|"           reduce using rule 70
	end            reduce using rule 70
	to             reduce using rule 70
	of             reduce using rule 70
	","            reduce using rule 70
	"."            reduce using rule 70
	";"            reduce using rule 70
	"->"           reduce using rule 70
	")"            reduce using rule 70
	is             reduce using rule 70


State 46

	Exp -> Int .                                        (rule 71)

	and            reduce using rule 71
	andalso        reduce using rule 71
	or             reduce using rule 71
	orelse         reduce using rule 71
	xor            reduce using rule 71
	band           reduce using rule 71
	bor            reduce using rule 71
	bsl            reduce using rule 71
	bsr            reduce using rule 71
	bxor           reduce using rule 71
	":"            reduce using rule 71
	"_"            reduce using rule 71
	"+"            reduce using rule 71
	"-"            reduce using rule 71
	"*"            reduce using rule 71
	"/"            reduce using rule 71
	div            reduce using rule 71
	rem            reduce using rule 71
	"<"            reduce using rule 71
	"=<"           reduce using rule 71
	">"            reduce using rule 71
	">="           reduce using rule 71
	"="            reduce using rule 71
	"/="           reduce using rule 71
	"|"            reduce using rule 71
	"!|"           reduce using rule 71
	end            reduce using rule 71
	to             reduce using rule 71
	of             reduce using rule 71
	","            reduce using rule 71
	"."            reduce using rule 71
	";"            reduce using rule 71
	"->"           reduce using rule 71
	")"            reduce using rule 71
	is             reduce using rule 71


State 47

	Exp -> Float .                                      (rule 72)

	and            reduce using rule 72
	andalso        reduce using rule 72
	or             reduce using rule 72
	orelse         reduce using rule 72
	xor            reduce using rule 72
	band           reduce using rule 72
	bor            reduce using rule 72
	bsl            reduce using rule 72
	bsr            reduce using rule 72
	bxor           reduce using rule 72
	":"            reduce using rule 72
	"_"            reduce using rule 72
	"+"            reduce using rule 72
	"-"            reduce using rule 72
	"*"            reduce using rule 72
	"/"            reduce using rule 72
	div            reduce using rule 72
	rem            reduce using rule 72
	"<"            reduce using rule 72
	"=<"           reduce using rule 72
	">"            reduce using rule 72
	">="           reduce using rule 72
	"="            reduce using rule 72
	"/="           reduce using rule 72
	"|"            reduce using rule 72
	"!|"           reduce using rule 72
	end            reduce using rule 72
	to             reduce using rule 72
	of             reduce using rule 72
	","            reduce using rule 72
	"."            reduce using rule 72
	";"            reduce using rule 72
	"->"           reduce using rule 72
	")"            reduce using rule 72
	is             reduce using rule 72


State 48

	Exp -> String .                                     (rule 73)

	and            reduce using rule 73
	andalso        reduce using rule 73
	or             reduce using rule 73
	orelse         reduce using rule 73
	xor            reduce using rule 73
	band           reduce using rule 73
	bor            reduce using rule 73
	bsl            reduce using rule 73
	bsr            reduce using rule 73
	bxor           reduce using rule 73
	":"            reduce using rule 73
	"_"            reduce using rule 73
	"+"            reduce using rule 73
	"-"            reduce using rule 73
	"*"            reduce using rule 73
	"/"            reduce using rule 73
	div            reduce using rule 73
	rem            reduce using rule 73
	"<"            reduce using rule 73
	"=<"           reduce using rule 73
	">"            reduce using rule 73
	">="           reduce using rule 73
	"="            reduce using rule 73
	"/="           reduce using rule 73
	"|"            reduce using rule 73
	"!|"           reduce using rule 73
	end            reduce using rule 73
	to             reduce using rule 73
	of             reduce using rule 73
	","            reduce using rule 73
	"."            reduce using rule 73
	";"            reduce using rule 73
	"->"           reduce using rule 73
	")"            reduce using rule 73
	is             reduce using rule 73


State 49

	Exp -> not . Exp                                    (rule 85)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 71
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 50

	Exp -> bnot . Exp                                   (rule 91)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 70
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 51

	Exp -> length . Exp                                 (rule 94)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 69
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 52

	Exp -> "-" . Exp                                    (rule 101)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 68
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 53

	Exp -> otherwise .                                  (rule 74)

	and            reduce using rule 74
	andalso        reduce using rule 74
	or             reduce using rule 74
	orelse         reduce using rule 74
	xor            reduce using rule 74
	band           reduce using rule 74
	bor            reduce using rule 74
	bsl            reduce using rule 74
	bsr            reduce using rule 74
	bxor           reduce using rule 74
	":"            reduce using rule 74
	"_"            reduce using rule 74
	"+"            reduce using rule 74
	"-"            reduce using rule 74
	"*"            reduce using rule 74
	"/"            reduce using rule 74
	div            reduce using rule 74
	rem            reduce using rule 74
	"<"            reduce using rule 74
	"=<"           reduce using rule 74
	">"            reduce using rule 74
	">="           reduce using rule 74
	"="            reduce using rule 74
	"/="           reduce using rule 74
	"|"            reduce using rule 74
	"!|"           reduce using rule 74
	end            reduce using rule 74
	to             reduce using rule 74
	of             reduce using rule 74
	","            reduce using rule 74
	"."            reduce using rule 74
	";"            reduce using rule 74
	"->"           reduce using rule 74
	")"            reduce using rule 74
	is             reduce using rule 74


State 54

	Exp -> toBoolean . Exp                              (rule 76)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 67
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 55

	Exp -> toCharacter . Exp                            (rule 77)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 66
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 56

	Exp -> toFloat . Exp                                (rule 78)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 65
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 57

	Exp -> toInteger . Exp                              (rule 79)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 64
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 58

	Exp -> "(" . Exp ")"                                (rule 68)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 63
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 59

	Bool -> boolLit .                                   (rule 110)

	and            reduce using rule 110
	andalso        reduce using rule 110
	or             reduce using rule 110
	orelse         reduce using rule 110
	xor            reduce using rule 110
	band           reduce using rule 110
	bor            reduce using rule 110
	bsl            reduce using rule 110
	bsr            reduce using rule 110
	bxor           reduce using rule 110
	":"            reduce using rule 110
	"_"            reduce using rule 110
	"+"            reduce using rule 110
	"-"            reduce using rule 110
	"*"            reduce using rule 110
	"/"            reduce using rule 110
	div            reduce using rule 110
	rem            reduce using rule 110
	"<"            reduce using rule 110
	"=<"           reduce using rule 110
	">"            reduce using rule 110
	">="           reduce using rule 110
	"="            reduce using rule 110
	"/="           reduce using rule 110
	"|"            reduce using rule 110
	"!|"           reduce using rule 110
	end            reduce using rule 110
	to             reduce using rule 110
	of             reduce using rule 110
	","            reduce using rule 110
	"."            reduce using rule 110
	";"            reduce using rule 110
	"->"           reduce using rule 110
	")"            reduce using rule 110
	is             reduce using rule 110


State 60

	Char -> charLit .                                   (rule 111)

	and            reduce using rule 111
	andalso        reduce using rule 111
	or             reduce using rule 111
	orelse         reduce using rule 111
	xor            reduce using rule 111
	band           reduce using rule 111
	bor            reduce using rule 111
	bsl            reduce using rule 111
	bsr            reduce using rule 111
	bxor           reduce using rule 111
	":"            reduce using rule 111
	"_"            reduce using rule 111
	"+"            reduce using rule 111
	"-"            reduce using rule 111
	"*"            reduce using rule 111
	"/"            reduce using rule 111
	div            reduce using rule 111
	rem            reduce using rule 111
	"<"            reduce using rule 111
	"=<"           reduce using rule 111
	">"            reduce using rule 111
	">="           reduce using rule 111
	"="            reduce using rule 111
	"/="           reduce using rule 111
	"|"            reduce using rule 111
	"!|"           reduce using rule 111
	end            reduce using rule 111
	to             reduce using rule 111
	of             reduce using rule 111
	","            reduce using rule 111
	"."            reduce using rule 111
	";"            reduce using rule 111
	"->"           reduce using rule 111
	")"            reduce using rule 111
	is             reduce using rule 111


State 61

	Float -> floatLit .                                 (rule 113)

	and            reduce using rule 113
	andalso        reduce using rule 113
	or             reduce using rule 113
	orelse         reduce using rule 113
	xor            reduce using rule 113
	band           reduce using rule 113
	bor            reduce using rule 113
	bsl            reduce using rule 113
	bsr            reduce using rule 113
	bxor           reduce using rule 113
	":"            reduce using rule 113
	"_"            reduce using rule 113
	"+"            reduce using rule 113
	"-"            reduce using rule 113
	"*"            reduce using rule 113
	"/"            reduce using rule 113
	div            reduce using rule 113
	rem            reduce using rule 113
	"<"            reduce using rule 113
	"=<"           reduce using rule 113
	">"            reduce using rule 113
	">="           reduce using rule 113
	"="            reduce using rule 113
	"/="           reduce using rule 113
	"|"            reduce using rule 113
	"!|"           reduce using rule 113
	end            reduce using rule 113
	to             reduce using rule 113
	of             reduce using rule 113
	","            reduce using rule 113
	"."            reduce using rule 113
	";"            reduce using rule 113
	"->"           reduce using rule 113
	")"            reduce using rule 113
	is             reduce using rule 113


State 62

	String -> stringLit .                               (rule 114)

	and            reduce using rule 114
	andalso        reduce using rule 114
	or             reduce using rule 114
	orelse         reduce using rule 114
	xor            reduce using rule 114
	band           reduce using rule 114
	bor            reduce using rule 114
	bsl            reduce using rule 114
	bsr            reduce using rule 114
	bxor           reduce using rule 114
	":"            reduce using rule 114
	"_"            reduce using rule 114
	"+"            reduce using rule 114
	"-"            reduce using rule 114
	"*"            reduce using rule 114
	"/"            reduce using rule 114
	div            reduce using rule 114
	rem            reduce using rule 114
	"<"            reduce using rule 114
	"=<"           reduce using rule 114
	">"            reduce using rule 114
	">="           reduce using rule 114
	"="            reduce using rule 114
	"/="           reduce using rule 114
	"|"            reduce using rule 114
	"!|"           reduce using rule 114
	end            reduce using rule 114
	to             reduce using rule 114
	of             reduce using rule 114
	","            reduce using rule 114
	"."            reduce using rule 114
	";"            reduce using rule 114
	"->"           reduce using rule 114
	")"            reduce using rule 114
	is             reduce using rule 114


State 63

	Exp -> "(" Exp . ")"                                (rule 68)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	")"            shift, and enter state 132


State 64

	Exp -> toInteger Exp .                              (rule 79)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 79
	andalso        reduce using rule 79
	or             reduce using rule 79
	orelse         reduce using rule 79
	xor            reduce using rule 79
	band           reduce using rule 79
	bor            reduce using rule 79
	bsl            reduce using rule 79
	bsr            reduce using rule 79
	bxor           reduce using rule 79
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 79
	"-"            reduce using rule 79
	"*"            reduce using rule 79
	"/"            reduce using rule 79
	div            reduce using rule 79
	rem            reduce using rule 79
	"<"            reduce using rule 79
	"=<"           reduce using rule 79
	">"            reduce using rule 79
	">="           reduce using rule 79
	"="            reduce using rule 79
	"/="           reduce using rule 79
	"|"            reduce using rule 79
	"!|"           reduce using rule 79
	end            reduce using rule 79
	to             reduce using rule 79
	of             reduce using rule 79
	","            reduce using rule 79
	"."            reduce using rule 79
	";"            reduce using rule 79
	"->"           reduce using rule 79
	")"            reduce using rule 79
	is             reduce using rule 79


State 65

	Exp -> toFloat Exp .                                (rule 78)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 78
	andalso        reduce using rule 78
	or             reduce using rule 78
	orelse         reduce using rule 78
	xor            reduce using rule 78
	band           reduce using rule 78
	bor            reduce using rule 78
	bsl            reduce using rule 78
	bsr            reduce using rule 78
	bxor           reduce using rule 78
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 78
	"-"            reduce using rule 78
	"*"            reduce using rule 78
	"/"            reduce using rule 78
	div            reduce using rule 78
	rem            reduce using rule 78
	"<"            reduce using rule 78
	"=<"           reduce using rule 78
	">"            reduce using rule 78
	">="           reduce using rule 78
	"="            reduce using rule 78
	"/="           reduce using rule 78
	"|"            reduce using rule 78
	"!|"           reduce using rule 78
	end            reduce using rule 78
	to             reduce using rule 78
	of             reduce using rule 78
	","            reduce using rule 78
	"."            reduce using rule 78
	";"            reduce using rule 78
	"->"           reduce using rule 78
	")"            reduce using rule 78
	is             reduce using rule 78


State 66

	Exp -> toCharacter Exp .                            (rule 77)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 77
	andalso        reduce using rule 77
	or             reduce using rule 77
	orelse         reduce using rule 77
	xor            reduce using rule 77
	band           reduce using rule 77
	bor            reduce using rule 77
	bsl            reduce using rule 77
	bsr            reduce using rule 77
	bxor           reduce using rule 77
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 77
	"-"            reduce using rule 77
	"*"            reduce using rule 77
	"/"            reduce using rule 77
	div            reduce using rule 77
	rem            reduce using rule 77
	"<"            reduce using rule 77
	"=<"           reduce using rule 77
	">"            reduce using rule 77
	">="           reduce using rule 77
	"="            reduce using rule 77
	"/="           reduce using rule 77
	"|"            reduce using rule 77
	"!|"           reduce using rule 77
	end            reduce using rule 77
	to             reduce using rule 77
	of             reduce using rule 77
	","            reduce using rule 77
	"."            reduce using rule 77
	";"            reduce using rule 77
	"->"           reduce using rule 77
	")"            reduce using rule 77
	is             reduce using rule 77


State 67

	Exp -> toBoolean Exp .                              (rule 76)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 76
	andalso        reduce using rule 76
	or             reduce using rule 76
	orelse         reduce using rule 76
	xor            reduce using rule 76
	band           reduce using rule 76
	bor            reduce using rule 76
	bsl            reduce using rule 76
	bsr            reduce using rule 76
	bxor           reduce using rule 76
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 76
	"-"            reduce using rule 76
	"*"            reduce using rule 76
	"/"            reduce using rule 76
	div            reduce using rule 76
	rem            reduce using rule 76
	"<"            reduce using rule 76
	"=<"           reduce using rule 76
	">"            reduce using rule 76
	">="           reduce using rule 76
	"="            reduce using rule 76
	"/="           reduce using rule 76
	"|"            reduce using rule 76
	"!|"           reduce using rule 76
	end            reduce using rule 76
	to             reduce using rule 76
	of             reduce using rule 76
	","            reduce using rule 76
	"."            reduce using rule 76
	";"            reduce using rule 76
	"->"           reduce using rule 76
	")"            reduce using rule 76
	is             reduce using rule 76


State 68

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> "-" Exp .                                    (rule 101)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 101
	andalso        reduce using rule 101
	or             reduce using rule 101
	orelse         reduce using rule 101
	xor            reduce using rule 101
	band           reduce using rule 101
	bor            reduce using rule 101
	bsl            reduce using rule 101
	bsr            reduce using rule 101
	bxor           reduce using rule 101
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 101
	"-"            reduce using rule 101
	"*"            reduce using rule 101
	"/"            reduce using rule 101
	div            reduce using rule 101
	rem            reduce using rule 101
	"<"            reduce using rule 101
	"=<"           reduce using rule 101
	">"            reduce using rule 101
	">="           reduce using rule 101
	"="            reduce using rule 101
	"/="           reduce using rule 101
	"|"            reduce using rule 101
	"!|"           reduce using rule 101
	end            reduce using rule 101
	to             reduce using rule 101
	of             reduce using rule 101
	","            reduce using rule 101
	"."            reduce using rule 101
	";"            reduce using rule 101
	"->"           reduce using rule 101
	")"            reduce using rule 101
	is             reduce using rule 101


State 69

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> length Exp .                                 (rule 94)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 94
	andalso        reduce using rule 94
	or             reduce using rule 94
	orelse         reduce using rule 94
	xor            reduce using rule 94
	band           reduce using rule 94
	bor            reduce using rule 94
	bsl            reduce using rule 94
	bsr            reduce using rule 94
	bxor           reduce using rule 94
	":"            reduce using rule 94
	"_"            reduce using rule 94
	"+"            reduce using rule 94
	"-"            reduce using rule 94
	"*"            reduce using rule 94
	"/"            reduce using rule 94
	div            reduce using rule 94
	rem            reduce using rule 94
	"<"            reduce using rule 94
	"=<"           reduce using rule 94
	">"            reduce using rule 94
	">="           reduce using rule 94
	"="            reduce using rule 94
	"/="           reduce using rule 94
	"|"            reduce using rule 94
	"!|"           reduce using rule 94
	end            reduce using rule 94
	to             reduce using rule 94
	of             reduce using rule 94
	","            reduce using rule 94
	"."            reduce using rule 94
	";"            reduce using rule 94
	"->"           reduce using rule 94
	")"            reduce using rule 94
	is             reduce using rule 94


State 70

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> bnot Exp .                                   (rule 91)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 91
	andalso        reduce using rule 91
	or             reduce using rule 91
	orelse         reduce using rule 91
	xor            reduce using rule 91
	band           reduce using rule 91
	bor            reduce using rule 91
	bsl            reduce using rule 91
	bsr            reduce using rule 91
	bxor           reduce using rule 91
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 91
	"-"            reduce using rule 91
	"*"            reduce using rule 91
	"/"            reduce using rule 91
	div            reduce using rule 91
	rem            reduce using rule 91
	"<"            reduce using rule 91
	"=<"           reduce using rule 91
	">"            reduce using rule 91
	">="           reduce using rule 91
	"="            reduce using rule 91
	"/="           reduce using rule 91
	"|"            reduce using rule 91
	"!|"           reduce using rule 91
	end            reduce using rule 91
	to             reduce using rule 91
	of             reduce using rule 91
	","            reduce using rule 91
	"."            reduce using rule 91
	";"            reduce using rule 91
	"->"           reduce using rule 91
	")"            reduce using rule 91
	is             reduce using rule 91


State 71

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> not Exp .                                    (rule 85)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 85
	andalso        reduce using rule 85
	or             reduce using rule 85
	orelse         reduce using rule 85
	xor            reduce using rule 85
	band           reduce using rule 85
	bor            reduce using rule 85
	bsl            reduce using rule 85
	bsr            reduce using rule 85
	bxor           reduce using rule 85
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 85
	"-"            reduce using rule 85
	"*"            reduce using rule 85
	"/"            reduce using rule 85
	div            reduce using rule 85
	rem            reduce using rule 85
	"<"            reduce using rule 85
	"=<"           reduce using rule 85
	">"            reduce using rule 85
	">="           reduce using rule 85
	"="            reduce using rule 85
	"/="           reduce using rule 85
	"|"            reduce using rule 85
	"!|"           reduce using rule 85
	end            reduce using rule 85
	to             reduce using rule 85
	of             reduce using rule 85
	","            reduce using rule 85
	"."            reduce using rule 85
	";"            reduce using rule 85
	"->"           reduce using rule 85
	")"            reduce using rule 85
	is             reduce using rule 85


State 72

	Exp -> Exp and . Exp                                (rule 80)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 131
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 73

	Exp -> Exp andalso . Exp                            (rule 81)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 130
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 74

	Exp -> Exp or . Exp                                 (rule 82)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 129
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 75

	Exp -> Exp orelse . Exp                             (rule 83)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 128
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 76

	Exp -> Exp xor . Exp                                (rule 84)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 127
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 77

	Exp -> Exp band . Exp                               (rule 86)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 126
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 78

	Exp -> Exp bor . Exp                                (rule 87)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 125
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 79

	Exp -> Exp bsl . Exp                                (rule 88)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 124
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 80

	Exp -> Exp bsr . Exp                                (rule 89)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 123
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 81

	Exp -> Exp bxor . Exp                               (rule 90)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 122
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 82

	Exp -> Exp ":" . Exp                                (rule 92)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 121
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 83

	Exp -> Exp "_" . Exp                                (rule 93)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 120
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 84

	Exp -> Exp "+" . Exp                                (rule 95)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 119
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 85

	Exp -> Exp "-" . Exp                                (rule 96)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 118
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 86

	Exp -> Exp "*" . Exp                                (rule 97)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 117
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 87

	Exp -> Exp "/" . Exp                                (rule 98)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 116
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 88

	Exp -> Exp div . Exp                                (rule 99)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 115
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 89

	Exp -> Exp rem . Exp                                (rule 100)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 114
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 90

	Exp -> Exp "<" . Exp                                (rule 102)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 113
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 91

	Exp -> Exp "=<" . Exp                               (rule 103)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 112
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 92

	Exp -> Exp ">" . Exp                                (rule 104)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 111
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 93

	Exp -> Exp ">=" . Exp                               (rule 105)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 110
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 94

	Exp -> Exp "=" . Exp                                (rule 106)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 109
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 95

	Exp -> Exp "/=" . Exp                               (rule 107)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 108
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 96

	Exp -> Exp "|" . Exp                                (rule 108)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 107
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 97

	Exp -> Exp "!|" . Exp                               (rule 109)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 106
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 98

	ArraySize -> Int ":" ArraySize .                    (rule 38)

	varId          reduce using rule 38


State 99

	TopDec -> proc GenId "(" Params ")" . ":-" Insts "."    (rule 4)

	":-"           shift, and enter state 105


State 100

	TopDec -> either GenId ":-" Decs "." .              (rule 5)

	proc           reduce using rule 5
	either         reduce using rule 5
	record         reduce using rule 5
	bool           reduce using rule 5
	char           reduce using rule 5
	int            reduce using rule 5
	float          reduce using rule 5
	string         reduce using rule 5
	genId          reduce using rule 5
	%eof           reduce using rule 5


State 101

	Declaration -> Type VarId .                         (rule 27)

	from           reduce using rule 27
	","            reduce using rule 27
	"."            reduce using rule 27
	")"            reduce using rule 27


State 102

	Decs -> Declaration "," . Decs                      (rule 13)

	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	genId          shift, and enter state 17

	GenId          goto state 4
	Decs           goto state 104
	Declaration    goto state 36
	Type           goto state 37
	Atom           goto state 8

State 103

	TopDec -> record GenId ":-" Decs "." .              (rule 6)

	proc           reduce using rule 6
	either         reduce using rule 6
	record         reduce using rule 6
	bool           reduce using rule 6
	char           reduce using rule 6
	int            reduce using rule 6
	float          reduce using rule 6
	string         reduce using rule 6
	genId          reduce using rule 6
	%eof           reduce using rule 6


State 104

	Decs -> Declaration "," Decs .                      (rule 13)

	"."            reduce using rule 13
	")"            reduce using rule 13


State 105

	TopDec -> proc GenId "(" Params ")" ":-" . Insts "."    (rule 4)

	for            shift, and enter state 146
	if             shift, and enter state 147
	while          shift, and enter state 148
	case           shift, and enter state 149
	finish         shift, and enter state 150
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	read           shift, and enter state 151
	write          shift, and enter state 152
	varId          shift, and enter state 24
	genId          shift, and enter state 17

	GenId          goto state 133
	Insts          goto state 134
	Inst           goto state 135
	Declaration    goto state 136
	Initialization goto state 137
	Type           goto state 7
	Atom           goto state 8
	Assign         goto state 138
	Lval           goto state 139
	VarId          goto state 140
	Call           goto state 141
	If             goto state 142
	Case           goto state 143
	For            goto state 144
	While          goto state 145

State 106

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)
	Exp -> Exp "!|" Exp .                               (rule 109)

	and            reduce using rule 109
	andalso        reduce using rule 109
	or             reduce using rule 109
	orelse         reduce using rule 109
	xor            reduce using rule 109
	band           reduce using rule 109
	bor            reduce using rule 109
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 109
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            reduce using rule 109
	"/="           reduce using rule 109
	"|"            fail
	"!|"           fail
	end            reduce using rule 109
	to             reduce using rule 109
	of             reduce using rule 109
	","            reduce using rule 109
	"."            reduce using rule 109
	";"            reduce using rule 109
	"->"           reduce using rule 109
	")"            reduce using rule 109
	is             reduce using rule 109


State 107

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp "|" Exp .                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 108
	andalso        reduce using rule 108
	or             reduce using rule 108
	orelse         reduce using rule 108
	xor            reduce using rule 108
	band           reduce using rule 108
	bor            reduce using rule 108
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 108
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            reduce using rule 108
	"/="           reduce using rule 108
	"|"            fail
	"!|"           fail
	end            reduce using rule 108
	to             reduce using rule 108
	of             reduce using rule 108
	","            reduce using rule 108
	"."            reduce using rule 108
	";"            reduce using rule 108
	"->"           reduce using rule 108
	")"            reduce using rule 108
	is             reduce using rule 108


State 108

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp "/=" Exp .                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 107
	andalso        reduce using rule 107
	or             reduce using rule 107
	orelse         reduce using rule 107
	xor            reduce using rule 107
	band           reduce using rule 107
	bor            reduce using rule 107
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 107
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            reduce using rule 107
	"/="           reduce using rule 107
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 107
	to             reduce using rule 107
	of             reduce using rule 107
	","            reduce using rule 107
	"."            reduce using rule 107
	";"            reduce using rule 107
	"->"           reduce using rule 107
	")"            reduce using rule 107
	is             reduce using rule 107


State 109

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp "=" Exp .                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 106
	andalso        reduce using rule 106
	or             reduce using rule 106
	orelse         reduce using rule 106
	xor            reduce using rule 106
	band           reduce using rule 106
	bor            reduce using rule 106
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 106
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            reduce using rule 106
	"/="           reduce using rule 106
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 106
	to             reduce using rule 106
	of             reduce using rule 106
	","            reduce using rule 106
	"."            reduce using rule 106
	";"            reduce using rule 106
	"->"           reduce using rule 106
	")"            reduce using rule 106
	is             reduce using rule 106


State 110

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp ">=" Exp .                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 105
	andalso        reduce using rule 105
	or             reduce using rule 105
	orelse         reduce using rule 105
	xor            reduce using rule 105
	band           reduce using rule 105
	bor            reduce using rule 105
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 105
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 105
	"/="           reduce using rule 105
	"|"            reduce using rule 105
	"!|"           reduce using rule 105
	end            reduce using rule 105
	to             reduce using rule 105
	of             reduce using rule 105
	","            reduce using rule 105
	"."            reduce using rule 105
	";"            reduce using rule 105
	"->"           reduce using rule 105
	")"            reduce using rule 105
	is             reduce using rule 105


State 111

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp ">" Exp .                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 104
	andalso        reduce using rule 104
	or             reduce using rule 104
	orelse         reduce using rule 104
	xor            reduce using rule 104
	band           reduce using rule 104
	bor            reduce using rule 104
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 104
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 104
	"/="           reduce using rule 104
	"|"            reduce using rule 104
	"!|"           reduce using rule 104
	end            reduce using rule 104
	to             reduce using rule 104
	of             reduce using rule 104
	","            reduce using rule 104
	"."            reduce using rule 104
	";"            reduce using rule 104
	"->"           reduce using rule 104
	")"            reduce using rule 104
	is             reduce using rule 104


State 112

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp "=<" Exp .                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 103
	andalso        reduce using rule 103
	or             reduce using rule 103
	orelse         reduce using rule 103
	xor            reduce using rule 103
	band           reduce using rule 103
	bor            reduce using rule 103
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 103
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 103
	"/="           reduce using rule 103
	"|"            reduce using rule 103
	"!|"           reduce using rule 103
	end            reduce using rule 103
	to             reduce using rule 103
	of             reduce using rule 103
	","            reduce using rule 103
	"."            reduce using rule 103
	";"            reduce using rule 103
	"->"           reduce using rule 103
	")"            reduce using rule 103
	is             reduce using rule 103


State 113

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp "<" Exp .                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 102
	andalso        reduce using rule 102
	or             reduce using rule 102
	orelse         reduce using rule 102
	xor            reduce using rule 102
	band           reduce using rule 102
	bor            reduce using rule 102
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 102
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 102
	"/="           reduce using rule 102
	"|"            reduce using rule 102
	"!|"           reduce using rule 102
	end            reduce using rule 102
	to             reduce using rule 102
	of             reduce using rule 102
	","            reduce using rule 102
	"."            reduce using rule 102
	";"            reduce using rule 102
	"->"           reduce using rule 102
	")"            reduce using rule 102
	is             reduce using rule 102


State 114

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp rem Exp .                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 100
	andalso        reduce using rule 100
	or             reduce using rule 100
	orelse         reduce using rule 100
	xor            reduce using rule 100
	band           reduce using rule 100
	bor            reduce using rule 100
	bsl            reduce using rule 100
	bsr            reduce using rule 100
	bxor           reduce using rule 100
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 100
	"-"            reduce using rule 100
	"*"            reduce using rule 100
	"/"            reduce using rule 100
	div            reduce using rule 100
	rem            reduce using rule 100
	"<"            reduce using rule 100
	"=<"           reduce using rule 100
	">"            reduce using rule 100
	">="           reduce using rule 100
	"="            reduce using rule 100
	"/="           reduce using rule 100
	"|"            reduce using rule 100
	"!|"           reduce using rule 100
	end            reduce using rule 100
	to             reduce using rule 100
	of             reduce using rule 100
	","            reduce using rule 100
	"."            reduce using rule 100
	";"            reduce using rule 100
	"->"           reduce using rule 100
	")"            reduce using rule 100
	is             reduce using rule 100


State 115

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp div Exp .                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 99
	andalso        reduce using rule 99
	or             reduce using rule 99
	orelse         reduce using rule 99
	xor            reduce using rule 99
	band           reduce using rule 99
	bor            reduce using rule 99
	bsl            reduce using rule 99
	bsr            reduce using rule 99
	bxor           reduce using rule 99
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 99
	"-"            reduce using rule 99
	"*"            reduce using rule 99
	"/"            reduce using rule 99
	div            reduce using rule 99
	rem            reduce using rule 99
	"<"            reduce using rule 99
	"=<"           reduce using rule 99
	">"            reduce using rule 99
	">="           reduce using rule 99
	"="            reduce using rule 99
	"/="           reduce using rule 99
	"|"            reduce using rule 99
	"!|"           reduce using rule 99
	end            reduce using rule 99
	to             reduce using rule 99
	of             reduce using rule 99
	","            reduce using rule 99
	"."            reduce using rule 99
	";"            reduce using rule 99
	"->"           reduce using rule 99
	")"            reduce using rule 99
	is             reduce using rule 99


State 116

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp "/" Exp .                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 98
	andalso        reduce using rule 98
	or             reduce using rule 98
	orelse         reduce using rule 98
	xor            reduce using rule 98
	band           reduce using rule 98
	bor            reduce using rule 98
	bsl            reduce using rule 98
	bsr            reduce using rule 98
	bxor           reduce using rule 98
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 98
	"-"            reduce using rule 98
	"*"            reduce using rule 98
	"/"            reduce using rule 98
	div            reduce using rule 98
	rem            reduce using rule 98
	"<"            reduce using rule 98
	"=<"           reduce using rule 98
	">"            reduce using rule 98
	">="           reduce using rule 98
	"="            reduce using rule 98
	"/="           reduce using rule 98
	"|"            reduce using rule 98
	"!|"           reduce using rule 98
	end            reduce using rule 98
	to             reduce using rule 98
	of             reduce using rule 98
	","            reduce using rule 98
	"."            reduce using rule 98
	";"            reduce using rule 98
	"->"           reduce using rule 98
	")"            reduce using rule 98
	is             reduce using rule 98


State 117

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp "*" Exp .                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 97
	andalso        reduce using rule 97
	or             reduce using rule 97
	orelse         reduce using rule 97
	xor            reduce using rule 97
	band           reduce using rule 97
	bor            reduce using rule 97
	bsl            reduce using rule 97
	bsr            reduce using rule 97
	bxor           reduce using rule 97
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 97
	"-"            reduce using rule 97
	"*"            reduce using rule 97
	"/"            reduce using rule 97
	div            reduce using rule 97
	rem            reduce using rule 97
	"<"            reduce using rule 97
	"=<"           reduce using rule 97
	">"            reduce using rule 97
	">="           reduce using rule 97
	"="            reduce using rule 97
	"/="           reduce using rule 97
	"|"            reduce using rule 97
	"!|"           reduce using rule 97
	end            reduce using rule 97
	to             reduce using rule 97
	of             reduce using rule 97
	","            reduce using rule 97
	"."            reduce using rule 97
	";"            reduce using rule 97
	"->"           reduce using rule 97
	")"            reduce using rule 97
	is             reduce using rule 97


State 118

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp "-" Exp .                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 96
	andalso        reduce using rule 96
	or             reduce using rule 96
	orelse         reduce using rule 96
	xor            reduce using rule 96
	band           reduce using rule 96
	bor            reduce using rule 96
	bsl            reduce using rule 96
	bsr            reduce using rule 96
	bxor           reduce using rule 96
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 96
	"-"            reduce using rule 96
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            reduce using rule 96
	"=<"           reduce using rule 96
	">"            reduce using rule 96
	">="           reduce using rule 96
	"="            reduce using rule 96
	"/="           reduce using rule 96
	"|"            reduce using rule 96
	"!|"           reduce using rule 96
	end            reduce using rule 96
	to             reduce using rule 96
	of             reduce using rule 96
	","            reduce using rule 96
	"."            reduce using rule 96
	";"            reduce using rule 96
	"->"           reduce using rule 96
	")"            reduce using rule 96
	is             reduce using rule 96


State 119

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp "+" Exp .                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 95
	andalso        reduce using rule 95
	or             reduce using rule 95
	orelse         reduce using rule 95
	xor            reduce using rule 95
	band           reduce using rule 95
	bor            reduce using rule 95
	bsl            reduce using rule 95
	bsr            reduce using rule 95
	bxor           reduce using rule 95
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            reduce using rule 95
	"-"            reduce using rule 95
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            reduce using rule 95
	"=<"           reduce using rule 95
	">"            reduce using rule 95
	">="           reduce using rule 95
	"="            reduce using rule 95
	"/="           reduce using rule 95
	"|"            reduce using rule 95
	"!|"           reduce using rule 95
	end            reduce using rule 95
	to             reduce using rule 95
	of             reduce using rule 95
	","            reduce using rule 95
	"."            reduce using rule 95
	";"            reduce using rule 95
	"->"           reduce using rule 95
	")"            reduce using rule 95
	is             reduce using rule 95


State 120

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp "_" Exp .                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 93
	andalso        reduce using rule 93
	or             reduce using rule 93
	orelse         reduce using rule 93
	xor            reduce using rule 93
	band           reduce using rule 93
	bor            reduce using rule 93
	bsl            reduce using rule 93
	bsr            reduce using rule 93
	bxor           reduce using rule 93
	":"            shift, and enter state 82
	"_"            reduce using rule 93
	"+"            reduce using rule 93
	"-"            reduce using rule 93
	"*"            reduce using rule 93
	"/"            reduce using rule 93
	div            reduce using rule 93
	rem            reduce using rule 93
	"<"            reduce using rule 93
	"=<"           reduce using rule 93
	">"            reduce using rule 93
	">="           reduce using rule 93
	"="            reduce using rule 93
	"/="           reduce using rule 93
	"|"            reduce using rule 93
	"!|"           reduce using rule 93
	end            reduce using rule 93
	to             reduce using rule 93
	of             reduce using rule 93
	","            reduce using rule 93
	"."            reduce using rule 93
	";"            reduce using rule 93
	"->"           reduce using rule 93
	")"            reduce using rule 93
	is             reduce using rule 93


State 121

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp ":" Exp .                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 92
	andalso        reduce using rule 92
	or             reduce using rule 92
	orelse         reduce using rule 92
	xor            reduce using rule 92
	band           reduce using rule 92
	bor            reduce using rule 92
	bsl            reduce using rule 92
	bsr            reduce using rule 92
	bxor           reduce using rule 92
	":"            reduce using rule 92
	"_"            reduce using rule 92
	"+"            reduce using rule 92
	"-"            reduce using rule 92
	"*"            reduce using rule 92
	"/"            reduce using rule 92
	div            reduce using rule 92
	rem            reduce using rule 92
	"<"            reduce using rule 92
	"=<"           reduce using rule 92
	">"            reduce using rule 92
	">="           reduce using rule 92
	"="            reduce using rule 92
	"/="           reduce using rule 92
	"|"            reduce using rule 92
	"!|"           reduce using rule 92
	end            reduce using rule 92
	to             reduce using rule 92
	of             reduce using rule 92
	","            reduce using rule 92
	"."            reduce using rule 92
	";"            reduce using rule 92
	"->"           reduce using rule 92
	")"            reduce using rule 92
	is             reduce using rule 92


State 122

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp bxor Exp .                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 90
	andalso        reduce using rule 90
	or             reduce using rule 90
	orelse         reduce using rule 90
	xor            reduce using rule 90
	band           shift, and enter state 77
	bor            reduce using rule 90
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 90
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 90
	to             reduce using rule 90
	of             reduce using rule 90
	","            reduce using rule 90
	"."            reduce using rule 90
	";"            reduce using rule 90
	"->"           reduce using rule 90
	")"            reduce using rule 90
	is             reduce using rule 90


State 123

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp bsr Exp .                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 89
	andalso        reduce using rule 89
	or             reduce using rule 89
	orelse         reduce using rule 89
	xor            reduce using rule 89
	band           reduce using rule 89
	bor            reduce using rule 89
	bsl            reduce using rule 89
	bsr            reduce using rule 89
	bxor           reduce using rule 89
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            reduce using rule 89
	"=<"           reduce using rule 89
	">"            reduce using rule 89
	">="           reduce using rule 89
	"="            reduce using rule 89
	"/="           reduce using rule 89
	"|"            reduce using rule 89
	"!|"           reduce using rule 89
	end            reduce using rule 89
	to             reduce using rule 89
	of             reduce using rule 89
	","            reduce using rule 89
	"."            reduce using rule 89
	";"            reduce using rule 89
	"->"           reduce using rule 89
	")"            reduce using rule 89
	is             reduce using rule 89


State 124

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp bsl Exp .                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 88
	andalso        reduce using rule 88
	or             reduce using rule 88
	orelse         reduce using rule 88
	xor            reduce using rule 88
	band           reduce using rule 88
	bor            reduce using rule 88
	bsl            reduce using rule 88
	bsr            reduce using rule 88
	bxor           reduce using rule 88
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            reduce using rule 88
	"=<"           reduce using rule 88
	">"            reduce using rule 88
	">="           reduce using rule 88
	"="            reduce using rule 88
	"/="           reduce using rule 88
	"|"            reduce using rule 88
	"!|"           reduce using rule 88
	end            reduce using rule 88
	to             reduce using rule 88
	of             reduce using rule 88
	","            reduce using rule 88
	"."            reduce using rule 88
	";"            reduce using rule 88
	"->"           reduce using rule 88
	")"            reduce using rule 88
	is             reduce using rule 88


State 125

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp bor Exp .                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 87
	andalso        reduce using rule 87
	or             reduce using rule 87
	orelse         reduce using rule 87
	xor            reduce using rule 87
	band           shift, and enter state 77
	bor            reduce using rule 87
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 87
	to             reduce using rule 87
	of             reduce using rule 87
	","            reduce using rule 87
	"."            reduce using rule 87
	";"            reduce using rule 87
	"->"           reduce using rule 87
	")"            reduce using rule 87
	is             reduce using rule 87


State 126

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp band Exp .                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 86
	andalso        reduce using rule 86
	or             reduce using rule 86
	orelse         reduce using rule 86
	xor            reduce using rule 86
	band           reduce using rule 86
	bor            reduce using rule 86
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           reduce using rule 86
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 86
	to             reduce using rule 86
	of             reduce using rule 86
	","            reduce using rule 86
	"."            reduce using rule 86
	";"            reduce using rule 86
	"->"           reduce using rule 86
	")"            reduce using rule 86
	is             reduce using rule 86


State 127

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp xor Exp .                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        reduce using rule 84
	or             reduce using rule 84
	orelse         reduce using rule 84
	xor            reduce using rule 84
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 84
	to             reduce using rule 84
	of             reduce using rule 84
	","            reduce using rule 84
	"."            reduce using rule 84
	";"            reduce using rule 84
	"->"           reduce using rule 84
	")"            reduce using rule 84
	is             reduce using rule 84


State 128

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp orelse Exp .                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         reduce using rule 83
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 83
	to             reduce using rule 83
	of             reduce using rule 83
	","            reduce using rule 83
	"."            reduce using rule 83
	";"            reduce using rule 83
	"->"           reduce using rule 83
	")"            reduce using rule 83
	is             reduce using rule 83


State 129

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp or Exp .                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        reduce using rule 82
	or             reduce using rule 82
	orelse         reduce using rule 82
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 82
	to             reduce using rule 82
	of             reduce using rule 82
	","            reduce using rule 82
	"."            reduce using rule 82
	";"            reduce using rule 82
	"->"           reduce using rule 82
	")"            reduce using rule 82
	is             reduce using rule 82


State 130

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp andalso Exp .                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        reduce using rule 81
	or             shift, and enter state 74
	orelse         reduce using rule 81
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 81
	to             reduce using rule 81
	of             reduce using rule 81
	","            reduce using rule 81
	"."            reduce using rule 81
	";"            reduce using rule 81
	"->"           reduce using rule 81
	")"            reduce using rule 81
	is             reduce using rule 81


State 131

	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp and Exp .                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            reduce using rule 80
	andalso        reduce using rule 80
	or             reduce using rule 80
	orelse         reduce using rule 80
	xor            reduce using rule 80
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 80
	to             reduce using rule 80
	of             reduce using rule 80
	","            reduce using rule 80
	"."            reduce using rule 80
	";"            reduce using rule 80
	"->"           reduce using rule 80
	")"            reduce using rule 80
	is             reduce using rule 80


State 132

	Exp -> "(" Exp ")" .                                (rule 68)

	and            reduce using rule 68
	andalso        reduce using rule 68
	or             reduce using rule 68
	orelse         reduce using rule 68
	xor            reduce using rule 68
	band           reduce using rule 68
	bor            reduce using rule 68
	bsl            reduce using rule 68
	bsr            reduce using rule 68
	bxor           reduce using rule 68
	":"            reduce using rule 68
	"_"            reduce using rule 68
	"+"            reduce using rule 68
	"-"            reduce using rule 68
	"*"            reduce using rule 68
	"/"            reduce using rule 68
	div            reduce using rule 68
	rem            reduce using rule 68
	"<"            reduce using rule 68
	"=<"           reduce using rule 68
	">"            reduce using rule 68
	">="           reduce using rule 68
	"="            reduce using rule 68
	"/="           reduce using rule 68
	"|"            reduce using rule 68
	"!|"           reduce using rule 68
	end            reduce using rule 68
	to             reduce using rule 68
	of             reduce using rule 68
	","            reduce using rule 68
	"."            reduce using rule 68
	";"            reduce using rule 68
	"->"           reduce using rule 68
	")"            reduce using rule 68
	is             reduce using rule 68


State 133

	Atom -> GenId .                                     (rule 36)
	Call -> GenId . "(" Args ")"                        (rule 44)

	":"            reduce using rule 36
	"("            shift, and enter state 169
	varId          reduce using rule 36


State 134

	TopDec -> proc GenId "(" Params ")" ":-" Insts . "."    (rule 4)

	"."            shift, and enter state 168


State 135

	Insts -> Inst .                                     (rule 14)
	Insts -> Inst . "," Insts                           (rule 15)

	end            reduce using rule 14
	","            shift, and enter state 167
	"."            reduce using rule 14
	";"            reduce using rule 14


State 136

	Inst -> Declaration .                               (rule 16)

	end            reduce using rule 16
	","            reduce using rule 16
	"."            reduce using rule 16
	";"            reduce using rule 16


State 137

	Inst -> Initialization .                            (rule 17)

	end            reduce using rule 17
	","            reduce using rule 17
	"."            reduce using rule 17
	";"            reduce using rule 17


State 138

	Inst -> Assign .                                    (rule 18)

	end            reduce using rule 18
	","            reduce using rule 18
	"."            reduce using rule 18
	";"            reduce using rule 18


State 139

	Assign -> Lval . is Exp                             (rule 39)
	Lval -> Lval . "_" VarId                            (rule 41)
	Lval -> Lval . ":" Exp                              (rule 42)

	":"            shift, and enter state 164
	"_"            shift, and enter state 165
	is             shift, and enter state 166


State 140

	Lval -> VarId .                                     (rule 40)

	":"            reduce using rule 40
	"_"            reduce using rule 40
	end            reduce using rule 40
	","            reduce using rule 40
	"."            reduce using rule 40
	";"            reduce using rule 40
	is             reduce using rule 40


State 141

	Inst -> Call .                                      (rule 19)

	end            reduce using rule 19
	","            reduce using rule 19
	"."            reduce using rule 19
	";"            reduce using rule 19


State 142

	Inst -> If .                                        (rule 20)

	end            reduce using rule 20
	","            reduce using rule 20
	"."            reduce using rule 20
	";"            reduce using rule 20


State 143

	Inst -> Case .                                      (rule 21)

	end            reduce using rule 21
	","            reduce using rule 21
	"."            reduce using rule 21
	";"            reduce using rule 21


State 144

	Inst -> For .                                       (rule 22)

	end            reduce using rule 22
	","            reduce using rule 22
	"."            reduce using rule 22
	";"            reduce using rule 22


State 145

	Inst -> While .                                     (rule 23)

	end            reduce using rule 23
	","            reduce using rule 23
	"."            reduce using rule 23
	";"            reduce using rule 23


State 146

	For -> for . VarId Ranges end                       (rule 59)
	For -> for . Declaration Ranges end                 (rule 60)

	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	varId          shift, and enter state 24
	genId          shift, and enter state 17

	GenId          goto state 4
	Declaration    goto state 162
	Type           goto state 37
	Atom           goto state 8
	VarId          goto state 163

State 147

	If -> if . Guards end                               (rule 49)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Guards         goto state 159
	Guard          goto state 160
	Exp            goto state 161
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 148

	While -> while . Conds end                          (rule 64)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Conds          goto state 156
	Cond           goto state 157
	Exp            goto state 158
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 149

	Case -> case . Exp of Sets end                      (rule 53)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 155
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 150

	Inst -> finish .                                    (rule 26)

	end            reduce using rule 26
	","            reduce using rule 26
	"."            reduce using rule 26
	";"            reduce using rule 26


State 151

	Inst -> read . Lval                                 (rule 24)

	varId          shift, and enter state 24

	Lval           goto state 154
	VarId          goto state 140

State 152

	Inst -> write . Exp                                 (rule 25)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 153
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 153

	Inst -> write Exp .                                 (rule 25)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 25
	","            reduce using rule 25
	"."            reduce using rule 25
	";"            reduce using rule 25


State 154

	Inst -> read Lval .                                 (rule 24)
	Lval -> Lval . "_" VarId                            (rule 41)
	Lval -> Lval . ":" Exp                              (rule 42)

	":"            shift, and enter state 164
	"_"            shift, and enter state 165
	end            reduce using rule 24
	","            reduce using rule 24
	"."            reduce using rule 24
	";"            reduce using rule 24


State 155

	Case -> case Exp . of Sets end                      (rule 53)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	of             shift, and enter state 187


State 156

	While -> while Conds . end                          (rule 64)

	end            shift, and enter state 186


State 157

	Conds -> Cond .                                     (rule 65)
	Conds -> Cond . ";" Conds                           (rule 66)

	end            reduce using rule 65
	";"            shift, and enter state 185


State 158

	Cond -> Exp . "->" Insts                            (rule 67)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	"->"           shift, and enter state 184


State 159

	If -> if Guards . end                               (rule 49)

	end            shift, and enter state 183


State 160

	Guards -> Guard .                                   (rule 50)
	Guards -> Guard . ";" Guards                        (rule 51)

	end            reduce using rule 50
	";"            shift, and enter state 182


State 161

	Guard -> Exp . "->" Insts                           (rule 52)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	"->"           shift, and enter state 181


State 162

	For -> for Declaration . Ranges end                 (rule 60)

	from           shift, and enter state 179

	Ranges         goto state 180
	Range          goto state 178

State 163

	For -> for VarId . Ranges end                       (rule 59)

	from           shift, and enter state 179

	Ranges         goto state 177
	Range          goto state 178

State 164

	Lval -> Lval ":" . Exp                              (rule 42)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 176
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 165

	Lval -> Lval "_" . VarId                            (rule 41)

	varId          shift, and enter state 24

	VarId          goto state 175

State 166

	Assign -> Lval is . Exp                             (rule 39)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 174
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 167

	Insts -> Inst "," . Insts                           (rule 15)

	for            shift, and enter state 146
	if             shift, and enter state 147
	while          shift, and enter state 148
	case           shift, and enter state 149
	finish         shift, and enter state 150
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	read           shift, and enter state 151
	write          shift, and enter state 152
	varId          shift, and enter state 24
	genId          shift, and enter state 17

	GenId          goto state 133
	Insts          goto state 173
	Inst           goto state 135
	Declaration    goto state 136
	Initialization goto state 137
	Type           goto state 7
	Atom           goto state 8
	Assign         goto state 138
	Lval           goto state 139
	VarId          goto state 140
	Call           goto state 141
	If             goto state 142
	Case           goto state 143
	For            goto state 144
	While          goto state 145

State 168

	TopDec -> proc GenId "(" Params ")" ":-" Insts "." .    (rule 4)

	proc           reduce using rule 4
	either         reduce using rule 4
	record         reduce using rule 4
	bool           reduce using rule 4
	char           reduce using rule 4
	int            reduce using rule 4
	float          reduce using rule 4
	string         reduce using rule 4
	genId          reduce using rule 4
	%eof           reduce using rule 4


State 169

	Call -> GenId "(" . Args ")"                        (rule 44)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	")"            reduce using rule 45
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Args           goto state 170
	Args1          goto state 171
	Exp            goto state 172
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 170

	Call -> GenId "(" Args . ")"                        (rule 44)

	")"            shift, and enter state 201


State 171

	Args -> Args1 .                                     (rule 46)

	")"            reduce using rule 46


State 172

	Args1 -> Exp .                                      (rule 47)
	Args1 -> Exp . "," Args1                            (rule 48)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	","            shift, and enter state 200
	")"            reduce using rule 47


State 173

	Insts -> Inst "," Insts .                           (rule 15)

	end            reduce using rule 15
	"."            reduce using rule 15
	";"            reduce using rule 15


State 174

	Assign -> Lval is Exp .                             (rule 39)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 39
	","            reduce using rule 39
	"."            reduce using rule 39
	";"            reduce using rule 39


State 175

	Lval -> Lval "_" VarId .                            (rule 41)

	":"            reduce using rule 41
	"_"            reduce using rule 41
	end            reduce using rule 41
	","            reduce using rule 41
	"."            reduce using rule 41
	";"            reduce using rule 41
	is             reduce using rule 41


State 176

	Lval -> Lval ":" Exp .                              (rule 42)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            reduce using rule 42
	"_"            reduce using rule 42
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	end            reduce using rule 42
	","            reduce using rule 42
	"."            reduce using rule 42
	";"            reduce using rule 42
	is             reduce using rule 42


State 177

	For -> for VarId Ranges . end                       (rule 59)

	end            shift, and enter state 199


State 178

	Ranges -> Range .                                   (rule 61)
	Ranges -> Range . ";" Ranges                        (rule 62)

	end            reduce using rule 61
	";"            shift, and enter state 198


State 179

	Range -> from . Exp to Exp "->" Insts               (rule 63)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 197
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 180

	For -> for Declaration Ranges . end                 (rule 60)

	end            shift, and enter state 196


State 181

	Guard -> Exp "->" . Insts                           (rule 52)

	for            shift, and enter state 146
	if             shift, and enter state 147
	while          shift, and enter state 148
	case           shift, and enter state 149
	finish         shift, and enter state 150
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	read           shift, and enter state 151
	write          shift, and enter state 152
	varId          shift, and enter state 24
	genId          shift, and enter state 17

	GenId          goto state 133
	Insts          goto state 195
	Inst           goto state 135
	Declaration    goto state 136
	Initialization goto state 137
	Type           goto state 7
	Atom           goto state 8
	Assign         goto state 138
	Lval           goto state 139
	VarId          goto state 140
	Call           goto state 141
	If             goto state 142
	Case           goto state 143
	For            goto state 144
	While          goto state 145

State 182

	Guards -> Guard ";" . Guards                        (rule 51)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Guards         goto state 194
	Guard          goto state 160
	Exp            goto state 161
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 183

	If -> if Guards end .                               (rule 49)

	end            reduce using rule 49
	","            reduce using rule 49
	"."            reduce using rule 49
	";"            reduce using rule 49


State 184

	Cond -> Exp "->" . Insts                            (rule 67)

	for            shift, and enter state 146
	if             shift, and enter state 147
	while          shift, and enter state 148
	case           shift, and enter state 149
	finish         shift, and enter state 150
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	read           shift, and enter state 151
	write          shift, and enter state 152
	varId          shift, and enter state 24
	genId          shift, and enter state 17

	GenId          goto state 133
	Insts          goto state 193
	Inst           goto state 135
	Declaration    goto state 136
	Initialization goto state 137
	Type           goto state 7
	Atom           goto state 8
	Assign         goto state 138
	Lval           goto state 139
	VarId          goto state 140
	Call           goto state 141
	If             goto state 142
	Case           goto state 143
	For            goto state 144
	While          goto state 145

State 185

	Conds -> Cond ";" . Conds                           (rule 66)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Conds          goto state 192
	Cond           goto state 157
	Exp            goto state 158
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 186

	While -> while Conds end .                          (rule 64)

	end            reduce using rule 64
	","            reduce using rule 64
	"."            reduce using rule 64
	";"            reduce using rule 64


State 187

	Case -> case Exp of . Sets end                      (rule 53)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Sets           goto state 188
	Exps           goto state 189
	Set            goto state 190
	Exp            goto state 191
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 188

	Case -> case Exp of Sets . end                      (rule 53)

	end            shift, and enter state 208


State 189

	Set -> Exps . "->" Insts                            (rule 58)

	"->"           shift, and enter state 207


State 190

	Sets -> Set .                                       (rule 54)
	Sets -> Set . ";" Sets                              (rule 55)

	end            reduce using rule 54
	";"            shift, and enter state 206


State 191

	Exps -> Exp .                                       (rule 56)
	Exps -> Exp . "," Exps                              (rule 57)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	","            shift, and enter state 205
	"->"           reduce using rule 56


State 192

	Conds -> Cond ";" Conds .                           (rule 66)

	end            reduce using rule 66


State 193

	Cond -> Exp "->" Insts .                            (rule 67)

	end            reduce using rule 67
	";"            reduce using rule 67


State 194

	Guards -> Guard ";" Guards .                        (rule 51)

	end            reduce using rule 51


State 195

	Guard -> Exp "->" Insts .                           (rule 52)

	end            reduce using rule 52
	";"            reduce using rule 52


State 196

	For -> for Declaration Ranges end .                 (rule 60)

	end            reduce using rule 60
	","            reduce using rule 60
	"."            reduce using rule 60
	";"            reduce using rule 60


State 197

	Range -> from Exp . to Exp "->" Insts               (rule 63)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	to             shift, and enter state 204


State 198

	Ranges -> Range ";" . Ranges                        (rule 62)

	from           shift, and enter state 179

	Ranges         goto state 203
	Range          goto state 178

State 199

	For -> for VarId Ranges end .                       (rule 59)

	end            reduce using rule 59
	","            reduce using rule 59
	"."            reduce using rule 59
	";"            reduce using rule 59


State 200

	Args1 -> Exp "," . Args1                            (rule 48)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Args1          goto state 202
	Exp            goto state 172
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 201

	Call -> GenId "(" Args ")" .                        (rule 44)

	end            reduce using rule 44
	","            reduce using rule 44
	"."            reduce using rule 44
	";"            reduce using rule 44


State 202

	Args1 -> Exp "," Args1 .                            (rule 48)

	")"            reduce using rule 48


State 203

	Ranges -> Range ";" Ranges .                        (rule 62)

	end            reduce using rule 62


State 204

	Range -> from Exp to . Exp "->" Insts               (rule 63)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exp            goto state 212
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 205

	Exps -> Exp "," . Exps                              (rule 57)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Exps           goto state 211
	Exp            goto state 191
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 206

	Sets -> Set ";" . Sets                              (rule 55)

	not            shift, and enter state 49
	bnot           shift, and enter state 50
	length         shift, and enter state 51
	"-"            shift, and enter state 52
	otherwise      shift, and enter state 53
	toBoolean      shift, and enter state 54
	toCharacter    shift, and enter state 55
	toFloat        shift, and enter state 56
	toInteger      shift, and enter state 57
	"("            shift, and enter state 58
	boolLit        shift, and enter state 59
	charLit        shift, and enter state 60
	intLit         shift, and enter state 31
	floatLit       shift, and enter state 61
	stringLit      shift, and enter state 62
	varId          shift, and enter state 24

	VarId          goto state 42
	Sets           goto state 210
	Exps           goto state 189
	Set            goto state 190
	Exp            goto state 191
	Bool           goto state 44
	Char           goto state 45
	Int            goto state 46
	Float          goto state 47
	String         goto state 48

State 207

	Set -> Exps "->" . Insts                            (rule 58)

	for            shift, and enter state 146
	if             shift, and enter state 147
	while          shift, and enter state 148
	case           shift, and enter state 149
	finish         shift, and enter state 150
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	read           shift, and enter state 151
	write          shift, and enter state 152
	varId          shift, and enter state 24
	genId          shift, and enter state 17

	GenId          goto state 133
	Insts          goto state 209
	Inst           goto state 135
	Declaration    goto state 136
	Initialization goto state 137
	Type           goto state 7
	Atom           goto state 8
	Assign         goto state 138
	Lval           goto state 139
	VarId          goto state 140
	Call           goto state 141
	If             goto state 142
	Case           goto state 143
	For            goto state 144
	While          goto state 145

State 208

	Case -> case Exp of Sets end .                      (rule 53)

	end            reduce using rule 53
	","            reduce using rule 53
	"."            reduce using rule 53
	";"            reduce using rule 53


State 209

	Set -> Exps "->" Insts .                            (rule 58)

	end            reduce using rule 58
	";"            reduce using rule 58


State 210

	Sets -> Set ";" Sets .                              (rule 55)

	end            reduce using rule 55


State 211

	Exps -> Exp "," Exps .                              (rule 57)

	"->"           reduce using rule 57


State 212

	Range -> from Exp to Exp . "->" Insts               (rule 63)
	Exp -> Exp . and Exp                                (rule 80)
	Exp -> Exp . andalso Exp                            (rule 81)
	Exp -> Exp . or Exp                                 (rule 82)
	Exp -> Exp . orelse Exp                             (rule 83)
	Exp -> Exp . xor Exp                                (rule 84)
	Exp -> Exp . band Exp                               (rule 86)
	Exp -> Exp . bor Exp                                (rule 87)
	Exp -> Exp . bsl Exp                                (rule 88)
	Exp -> Exp . bsr Exp                                (rule 89)
	Exp -> Exp . bxor Exp                               (rule 90)
	Exp -> Exp . ":" Exp                                (rule 92)
	Exp -> Exp . "_" Exp                                (rule 93)
	Exp -> Exp . "+" Exp                                (rule 95)
	Exp -> Exp . "-" Exp                                (rule 96)
	Exp -> Exp . "*" Exp                                (rule 97)
	Exp -> Exp . "/" Exp                                (rule 98)
	Exp -> Exp . div Exp                                (rule 99)
	Exp -> Exp . rem Exp                                (rule 100)
	Exp -> Exp . "<" Exp                                (rule 102)
	Exp -> Exp . "=<" Exp                               (rule 103)
	Exp -> Exp . ">" Exp                                (rule 104)
	Exp -> Exp . ">=" Exp                               (rule 105)
	Exp -> Exp . "=" Exp                                (rule 106)
	Exp -> Exp . "/=" Exp                               (rule 107)
	Exp -> Exp . "|" Exp                                (rule 108)
	Exp -> Exp . "!|" Exp                               (rule 109)

	and            shift, and enter state 72
	andalso        shift, and enter state 73
	or             shift, and enter state 74
	orelse         shift, and enter state 75
	xor            shift, and enter state 76
	band           shift, and enter state 77
	bor            shift, and enter state 78
	bsl            shift, and enter state 79
	bsr            shift, and enter state 80
	bxor           shift, and enter state 81
	":"            shift, and enter state 82
	"_"            shift, and enter state 83
	"+"            shift, and enter state 84
	"-"            shift, and enter state 85
	"*"            shift, and enter state 86
	"/"            shift, and enter state 87
	div            shift, and enter state 88
	rem            shift, and enter state 89
	"<"            shift, and enter state 90
	"=<"           shift, and enter state 91
	">"            shift, and enter state 92
	">="           shift, and enter state 93
	"="            shift, and enter state 94
	"/="           shift, and enter state 95
	"|"            shift, and enter state 96
	"!|"           shift, and enter state 97
	"->"           shift, and enter state 213


State 213

	Range -> from Exp to Exp "->" . Insts               (rule 63)

	for            shift, and enter state 146
	if             shift, and enter state 147
	while          shift, and enter state 148
	case           shift, and enter state 149
	finish         shift, and enter state 150
	bool           shift, and enter state 12
	char           shift, and enter state 13
	int            shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	read           shift, and enter state 151
	write          shift, and enter state 152
	varId          shift, and enter state 24
	genId          shift, and enter state 17

	GenId          goto state 133
	Insts          goto state 214
	Inst           goto state 135
	Declaration    goto state 136
	Initialization goto state 137
	Type           goto state 7
	Atom           goto state 8
	Assign         goto state 138
	Lval           goto state 139
	VarId          goto state 140
	Call           goto state 141
	If             goto state 142
	Case           goto state 143
	For            goto state 144
	While          goto state 145

State 214

	Range -> from Exp to Exp "->" Insts .               (rule 63)

	end            reduce using rule 63
	";"            reduce using rule 63


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 115
Number of terminals: 68
Number of non-terminals: 39
Number of states: 215
