-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Program                           (0)
	Program -> TopDecs                                 (1)
	TopDecs -> TopDec                                  (2)
	TopDecs -> TopDecs TopDec                          (3)
	TopDec -> proc GenId "(" Params ")" ":-" Insts "."   (4)
	TopDec -> either GenId ":-" Decs "."               (5)
	TopDec -> record GenId ":-" Decs "."               (6)
	TopDec -> Declaration "."                          (7)
	TopDec -> Initialization "."                       (8)
	GenId -> genId                                     (9)
	Params ->                                          (10)
	Params -> Decs                                     (11)
	Decs -> Declaration                                (12)
	Decs -> Decs "," Declaration                       (13)
	Insts -> Inst                                      (14)
	Insts -> Insts "," Inst                            (15)
	Inst -> Declaration                                (16)
	Inst -> Initialization                             (17)
	Inst -> Assign                                     (18)
	Inst -> Call                                       (19)
	Inst -> If                                         (20)
	Inst -> Case                                       (21)
	Inst -> For                                        (22)
	Inst -> While                                      (23)
	Inst -> read Lval                                  (24)
	Inst -> write Exp                                  (25)
	Inst -> finish                                     (26)
	Declaration -> Type VarId                          (27)
	Initialization -> Type VarId is Exp                (28)
	Type -> GenId                                      (29)
	Type -> GenId ":" ArraySize                        (30)
	ArraySize -> Int                                   (31)
	ArraySize -> ArraySize ":" Int                     (32)
	Assign -> Lval is Exp                              (33)
	Lval -> VarId                                      (34)
	Lval -> Lval "_" VarId                             (35)
	Lval -> Lval ":" Exp                               (36)
	VarId -> varId                                     (37)
	Call -> GenId "(" Args ")"                         (38)
	Args ->                                            (39)
	Args -> Args1                                      (40)
	Args1 -> Exp                                       (41)
	Args1 -> Args1 "," Exp                             (42)
	If -> if Guards end                                (43)
	Guards -> Guard                                    (44)
	Guards -> Guards ";" Guard                         (45)
	Guard -> Exp "->" Insts                            (46)
	Case -> case Exp of Sets end                       (47)
	Sets -> Set                                        (48)
	Sets -> Sets ";" Set                               (49)
	Exps -> Exp                                        (50)
	Exps -> Exps "," Exp                               (51)
	Set -> Exps "->" Insts                             (52)
	For -> for VarId Ranges end                        (53)
	For -> for Declaration Ranges end                  (54)
	Ranges -> Range                                    (55)
	Ranges -> Ranges ";" Range                         (56)
	Range -> from Exp to Exp "->" Insts                (57)
	While -> while Conds end                           (58)
	Conds -> Cond                                      (59)
	Conds -> Conds ";" Cond                            (60)
	Cond -> Exp "->" Insts                             (61)
	Exp -> "(" Exp ")"                                 (62)
	Exp -> Bool                                        (63)
	Exp -> Char                                        (64)
	Exp -> Int                                         (65)
	Exp -> Float                                       (66)
	Exp -> String                                      (67)
	Exp -> otherwise                                   (68)
	Exp -> VarId                                       (69)
	Exp -> toBoolean Exp                               (70)
	Exp -> toCharacter Exp                             (71)
	Exp -> toFloat Exp                                 (72)
	Exp -> toInteger Exp                               (73)
	Exp -> Exp and Exp                                 (74)
	Exp -> Exp andalso Exp                             (75)
	Exp -> Exp or Exp                                  (76)
	Exp -> Exp orelse Exp                              (77)
	Exp -> Exp xor Exp                                 (78)
	Exp -> not Exp                                     (79)
	Exp -> Exp band Exp                                (80)
	Exp -> Exp bor Exp                                 (81)
	Exp -> Exp bsl Exp                                 (82)
	Exp -> Exp bsr Exp                                 (83)
	Exp -> Exp bxor Exp                                (84)
	Exp -> bnot Exp                                    (85)
	Exp -> Exp ":" Exp                                 (86)
	Exp -> Exp "_" Exp                                 (87)
	Exp -> length Exp                                  (88)
	Exp -> Exp "+" Exp                                 (89)
	Exp -> Exp "-" Exp                                 (90)
	Exp -> Exp "*" Exp                                 (91)
	Exp -> Exp "/" Exp                                 (92)
	Exp -> Exp div Exp                                 (93)
	Exp -> Exp rem Exp                                 (94)
	Exp -> "-" Exp                                     (95)
	Exp -> Exp "<" Exp                                 (96)
	Exp -> Exp "=<" Exp                                (97)
	Exp -> Exp ">" Exp                                 (98)
	Exp -> Exp ">=" Exp                                (99)
	Exp -> Exp "=" Exp                                 (100)
	Exp -> Exp "/=" Exp                                (101)
	Exp -> Exp "|" Exp                                 (102)
	Exp -> Exp "!|" Exp                                (103)
	Bool -> boolLit                                    (104)
	Char -> charLit                                    (105)
	Int -> intLit                                      (106)
	Float -> floatLit                                  (107)
	String -> stringLit                                (108)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	and            { TokenAnd     :@ _ }
	andalso        { TokenAndalso :@ _ }
	or             { TokenOr      :@ _ }
	orelse         { TokenOrelse  :@ _ }
	xor            { TokenXor     :@ _ }
	not            { TokenNot     :@ _ }
	band           { TokenBand :@ _ }
	bor            { TokenBor  :@ _ }
	bnot           { TokenBnot :@ _ }
	bsl            { TokenBxor :@ _ }
	bsr            { TokenBxor :@ _ }
	bxor           { TokenBxor :@ _ }
	length         { TokenLength     :@ _ }
	":"            { TokenColon      :@ _ }
	"_"            { TokenUnderscore :@ _ }
	"+"            { TokenPlus     :@ _ }
	"-"            { TokenMinus    :@ _ }
	"*"            { TokenTimes    :@ _ }
	"/"            { TokenFloatDiv :@ _ }
	div            { TokenIntDiv   :@ _ }
	rem            { TokenRem      :@ _ }
	"<"            { TokenLT :@ _ }
	"=<"           { TokenLE :@ _ }
	">"            { TokenGT :@ _ }
	">="           { TokenGE :@ _ }
	"="            { TokenEQ :@ _ }
	"/="           { TokenNE :@ _ }
	"|"            { TokenFA :@ _ }
	"!|"           { TokenNF :@ _ }
	end            { TokenEnd       :@ _ }
	for            { TokenFor       :@ _ }
	from           { TokenFrom      :@ _ }
	to             { TokenTo        :@ _ }
	if             { TokenIf        :@ _ }
	otherwise      { TokenOtherwise :@ _ }
	while          { TokenWhile     :@ _ }
	case           { TokenCase      :@ _ }
	of             { TokenOf        :@ _ }
	proc           { TokenProcedure :@ _ }
	":-"           { TokenDefine    :@ _ }
	finish         { TokenFinish    :@ _ }
	either         { TokenEither :@ _ }
	record         { TokenRecord :@ _ }
	toBoolean      { TokenToBool  :@ _ }
	toCharacter    { TokenToChar  :@ _ }
	toFloat        { TokenToFloat :@ _ }
	toInteger      { TokenToInt   :@ _ }
	","            { TokenComma     :@ _ }
	"."            { TokenPeriod    :@ _ }
	";"            { TokenSemicolon :@ _ }
	"->"           { TokenArrow     :@ _ }
	"("            { TokenLeftPar   :@ _ }
	")"            { TokenRightPar  :@ _ }
	is             { TokenIs :@ _ }
	read           { TokenRead  :@ _ }
	write          { TokenWrite :@ _ }
	boolLit        { TokenBoolLit   _ :@ _ }
	charLit        { TokenCharLit   _ :@ _ }
	intLit         { TokenIntLit    _ :@ _ }
	floatLit       { TokenFloatLit  _ :@ _ }
	stringLit      { TokenStringLit _ :@ _ }
	varId          { TokenVarId _ :@ _ }
	genId          { TokenGenId _ :@ _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Program         rule  1
	TopDecs         rules 2, 3
	TopDec          rules 4, 5, 6, 7, 8
	GenId           rule  9
	Params          rules 10, 11
	Decs            rules 12, 13
	Insts           rules 14, 15
	Inst            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
	Declaration     rule  27
	Initialization  rule  28
	Type            rules 29, 30
	ArraySize       rules 31, 32
	Assign          rule  33
	Lval            rules 34, 35, 36
	VarId           rule  37
	Call            rule  38
	Args            rules 39, 40
	Args1           rules 41, 42
	If              rule  43
	Guards          rules 44, 45
	Guard           rule  46
	Case            rule  47
	Sets            rules 48, 49
	Exps            rules 50, 51
	Set             rule  52
	For             rules 53, 54
	Ranges          rules 55, 56
	Range           rule  57
	While           rule  58
	Conds           rules 59, 60
	Cond            rule  61
	Exp             rules 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
	Bool            rule  104
	Char            rule  105
	Int             rule  106
	Float           rule  107
	String          rule  108

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	proc           shift, and enter state 8
	either         shift, and enter state 9
	record         shift, and enter state 10
	genId          shift, and enter state 11

	Program        goto state 12
	TopDecs        goto state 2
	TopDec         goto state 3
	GenId          goto state 4
	Declaration    goto state 5
	Initialization goto state 6
	Type           goto state 7

State 1


	proc           shift, and enter state 8
	either         shift, and enter state 9
	record         shift, and enter state 10
	genId          shift, and enter state 11

	TopDecs        goto state 2
	TopDec         goto state 3
	GenId          goto state 4
	Declaration    goto state 5
	Initialization goto state 6
	Type           goto state 7

State 2

	Program -> TopDecs .                                (rule 1)
	TopDecs -> TopDecs . TopDec                         (rule 3)

	proc           shift, and enter state 8
	either         shift, and enter state 9
	record         shift, and enter state 10
	genId          shift, and enter state 11
	%eof           reduce using rule 1

	TopDec         goto state 21
	GenId          goto state 4
	Declaration    goto state 5
	Initialization goto state 6
	Type           goto state 7

State 3

	TopDecs -> TopDec .                                 (rule 2)

	proc           reduce using rule 2
	either         reduce using rule 2
	record         reduce using rule 2
	genId          reduce using rule 2
	%eof           reduce using rule 2


State 4

	Type -> GenId .                                     (rule 29)
	Type -> GenId . ":" ArraySize                       (rule 30)

	":"            shift, and enter state 20
	varId          reduce using rule 29


State 5

	TopDec -> Declaration . "."                         (rule 7)

	"."            shift, and enter state 19


State 6

	TopDec -> Initialization . "."                      (rule 8)

	"."            shift, and enter state 18


State 7

	Declaration -> Type . VarId                         (rule 27)
	Initialization -> Type . VarId is Exp               (rule 28)

	varId          shift, and enter state 17

	VarId          goto state 16

State 8

	TopDec -> proc . GenId "(" Params ")" ":-" Insts "."    (rule 4)

	genId          shift, and enter state 11

	GenId          goto state 15

State 9

	TopDec -> either . GenId ":-" Decs "."              (rule 5)

	genId          shift, and enter state 11

	GenId          goto state 14

State 10

	TopDec -> record . GenId ":-" Decs "."              (rule 6)

	genId          shift, and enter state 11

	GenId          goto state 13

State 11

	GenId -> genId .                                    (rule 9)

	":"            reduce using rule 9
	":-"           reduce using rule 9
	"("            reduce using rule 9
	varId          reduce using rule 9


State 12

	%start_parser -> Program .                          (rule 0)

	%eof           accept


State 13

	TopDec -> record GenId . ":-" Decs "."              (rule 6)

	":-"           shift, and enter state 28


State 14

	TopDec -> either GenId . ":-" Decs "."              (rule 5)

	":-"           shift, and enter state 27


State 15

	TopDec -> proc GenId . "(" Params ")" ":-" Insts "."    (rule 4)

	"("            shift, and enter state 26


State 16

	Declaration -> Type VarId .                         (rule 27)
	Initialization -> Type VarId . is Exp               (rule 28)

	end            reduce using rule 27
	","            reduce using rule 27
	"."            reduce using rule 27
	";"            reduce using rule 27
	is             shift, and enter state 25


State 17

	VarId -> varId .                                    (rule 37)

	and            reduce using rule 37
	andalso        reduce using rule 37
	or             reduce using rule 37
	orelse         reduce using rule 37
	xor            reduce using rule 37
	band           reduce using rule 37
	bor            reduce using rule 37
	bsl            reduce using rule 37
	bsr            reduce using rule 37
	bxor           reduce using rule 37
	":"            reduce using rule 37
	"_"            reduce using rule 37
	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"*"            reduce using rule 37
	"/"            reduce using rule 37
	div            reduce using rule 37
	rem            reduce using rule 37
	"<"            reduce using rule 37
	"=<"           reduce using rule 37
	">"            reduce using rule 37
	">="           reduce using rule 37
	"="            reduce using rule 37
	"/="           reduce using rule 37
	"|"            reduce using rule 37
	"!|"           reduce using rule 37
	end            reduce using rule 37
	from           reduce using rule 37
	to             reduce using rule 37
	of             reduce using rule 37
	","            reduce using rule 37
	"."            reduce using rule 37
	";"            reduce using rule 37
	"->"           reduce using rule 37
	")"            reduce using rule 37
	is             reduce using rule 37


State 18

	TopDec -> Initialization "." .                      (rule 8)

	proc           reduce using rule 8
	either         reduce using rule 8
	record         reduce using rule 8
	genId          reduce using rule 8
	%eof           reduce using rule 8


State 19

	TopDec -> Declaration "." .                         (rule 7)

	proc           reduce using rule 7
	either         reduce using rule 7
	record         reduce using rule 7
	genId          reduce using rule 7
	%eof           reduce using rule 7


State 20

	Type -> GenId ":" . ArraySize                       (rule 30)

	intLit         shift, and enter state 24

	ArraySize      goto state 22
	Int            goto state 23

State 21

	TopDecs -> TopDecs TopDec .                         (rule 3)

	proc           reduce using rule 3
	either         reduce using rule 3
	record         reduce using rule 3
	genId          reduce using rule 3
	%eof           reduce using rule 3


State 22

	Type -> GenId ":" ArraySize .                       (rule 30)
	ArraySize -> ArraySize . ":" Int                    (rule 32)

	":"            shift, and enter state 56
	varId          reduce using rule 30


State 23

	ArraySize -> Int .                                  (rule 31)

	":"            reduce using rule 31
	varId          reduce using rule 31


State 24

	Int -> intLit .                                     (rule 106)

	and            reduce using rule 106
	andalso        reduce using rule 106
	or             reduce using rule 106
	orelse         reduce using rule 106
	xor            reduce using rule 106
	band           reduce using rule 106
	bor            reduce using rule 106
	bsl            reduce using rule 106
	bsr            reduce using rule 106
	bxor           reduce using rule 106
	":"            reduce using rule 106
	"_"            reduce using rule 106
	"+"            reduce using rule 106
	"-"            reduce using rule 106
	"*"            reduce using rule 106
	"/"            reduce using rule 106
	div            reduce using rule 106
	rem            reduce using rule 106
	"<"            reduce using rule 106
	"=<"           reduce using rule 106
	">"            reduce using rule 106
	">="           reduce using rule 106
	"="            reduce using rule 106
	"/="           reduce using rule 106
	"|"            reduce using rule 106
	"!|"           reduce using rule 106
	end            reduce using rule 106
	to             reduce using rule 106
	of             reduce using rule 106
	","            reduce using rule 106
	"."            reduce using rule 106
	";"            reduce using rule 106
	"->"           reduce using rule 106
	")"            reduce using rule 106
	is             reduce using rule 106
	varId          reduce using rule 106


State 25

	Initialization -> Type VarId is . Exp               (rule 28)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 36
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 26

	TopDec -> proc GenId "(" . Params ")" ":-" Insts "."    (rule 4)

	")"            reduce using rule 10
	genId          shift, and enter state 11

	GenId          goto state 4
	Params         goto state 33
	Decs           goto state 34
	Declaration    goto state 30
	Type           goto state 31

State 27

	TopDec -> either GenId ":-" . Decs "."              (rule 5)

	genId          shift, and enter state 11

	GenId          goto state 4
	Decs           goto state 32
	Declaration    goto state 30
	Type           goto state 31

State 28

	TopDec -> record GenId ":-" . Decs "."              (rule 6)

	genId          shift, and enter state 11

	GenId          goto state 4
	Decs           goto state 29
	Declaration    goto state 30
	Type           goto state 31

State 29

	TopDec -> record GenId ":-" Decs . "."              (rule 6)
	Decs -> Decs . "," Declaration                      (rule 13)

	","            shift, and enter state 93
	"."            shift, and enter state 97


State 30

	Decs -> Declaration .                               (rule 12)

	","            reduce using rule 12
	"."            reduce using rule 12
	")"            reduce using rule 12


State 31

	Declaration -> Type . VarId                         (rule 27)

	varId          shift, and enter state 17

	VarId          goto state 96

State 32

	TopDec -> either GenId ":-" Decs . "."              (rule 5)
	Decs -> Decs . "," Declaration                      (rule 13)

	","            shift, and enter state 93
	"."            shift, and enter state 95


State 33

	TopDec -> proc GenId "(" Params . ")" ":-" Insts "."    (rule 4)

	")"            shift, and enter state 94


State 34

	Params -> Decs .                                    (rule 11)
	Decs -> Decs . "," Declaration                      (rule 13)

	","            shift, and enter state 93
	")"            reduce using rule 11


State 35

	Exp -> VarId .                                      (rule 69)

	and            reduce using rule 69
	andalso        reduce using rule 69
	or             reduce using rule 69
	orelse         reduce using rule 69
	xor            reduce using rule 69
	band           reduce using rule 69
	bor            reduce using rule 69
	bsl            reduce using rule 69
	bsr            reduce using rule 69
	bxor           reduce using rule 69
	":"            reduce using rule 69
	"_"            reduce using rule 69
	"+"            reduce using rule 69
	"-"            reduce using rule 69
	"*"            reduce using rule 69
	"/"            reduce using rule 69
	div            reduce using rule 69
	rem            reduce using rule 69
	"<"            reduce using rule 69
	"=<"           reduce using rule 69
	">"            reduce using rule 69
	">="           reduce using rule 69
	"="            reduce using rule 69
	"/="           reduce using rule 69
	"|"            reduce using rule 69
	"!|"           reduce using rule 69
	end            reduce using rule 69
	to             reduce using rule 69
	of             reduce using rule 69
	","            reduce using rule 69
	"."            reduce using rule 69
	";"            reduce using rule 69
	"->"           reduce using rule 69
	")"            reduce using rule 69
	is             reduce using rule 69


State 36

	Initialization -> Type VarId is Exp .               (rule 28)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 28
	","            reduce using rule 28
	"."            reduce using rule 28
	";"            reduce using rule 28


State 37

	Exp -> Bool .                                       (rule 63)

	and            reduce using rule 63
	andalso        reduce using rule 63
	or             reduce using rule 63
	orelse         reduce using rule 63
	xor            reduce using rule 63
	band           reduce using rule 63
	bor            reduce using rule 63
	bsl            reduce using rule 63
	bsr            reduce using rule 63
	bxor           reduce using rule 63
	":"            reduce using rule 63
	"_"            reduce using rule 63
	"+"            reduce using rule 63
	"-"            reduce using rule 63
	"*"            reduce using rule 63
	"/"            reduce using rule 63
	div            reduce using rule 63
	rem            reduce using rule 63
	"<"            reduce using rule 63
	"=<"           reduce using rule 63
	">"            reduce using rule 63
	">="           reduce using rule 63
	"="            reduce using rule 63
	"/="           reduce using rule 63
	"|"            reduce using rule 63
	"!|"           reduce using rule 63
	end            reduce using rule 63
	to             reduce using rule 63
	of             reduce using rule 63
	","            reduce using rule 63
	"."            reduce using rule 63
	";"            reduce using rule 63
	"->"           reduce using rule 63
	")"            reduce using rule 63
	is             reduce using rule 63


State 38

	Exp -> Char .                                       (rule 64)

	and            reduce using rule 64
	andalso        reduce using rule 64
	or             reduce using rule 64
	orelse         reduce using rule 64
	xor            reduce using rule 64
	band           reduce using rule 64
	bor            reduce using rule 64
	bsl            reduce using rule 64
	bsr            reduce using rule 64
	bxor           reduce using rule 64
	":"            reduce using rule 64
	"_"            reduce using rule 64
	"+"            reduce using rule 64
	"-"            reduce using rule 64
	"*"            reduce using rule 64
	"/"            reduce using rule 64
	div            reduce using rule 64
	rem            reduce using rule 64
	"<"            reduce using rule 64
	"=<"           reduce using rule 64
	">"            reduce using rule 64
	">="           reduce using rule 64
	"="            reduce using rule 64
	"/="           reduce using rule 64
	"|"            reduce using rule 64
	"!|"           reduce using rule 64
	end            reduce using rule 64
	to             reduce using rule 64
	of             reduce using rule 64
	","            reduce using rule 64
	"."            reduce using rule 64
	";"            reduce using rule 64
	"->"           reduce using rule 64
	")"            reduce using rule 64
	is             reduce using rule 64


State 39

	Exp -> Int .                                        (rule 65)

	and            reduce using rule 65
	andalso        reduce using rule 65
	or             reduce using rule 65
	orelse         reduce using rule 65
	xor            reduce using rule 65
	band           reduce using rule 65
	bor            reduce using rule 65
	bsl            reduce using rule 65
	bsr            reduce using rule 65
	bxor           reduce using rule 65
	":"            reduce using rule 65
	"_"            reduce using rule 65
	"+"            reduce using rule 65
	"-"            reduce using rule 65
	"*"            reduce using rule 65
	"/"            reduce using rule 65
	div            reduce using rule 65
	rem            reduce using rule 65
	"<"            reduce using rule 65
	"=<"           reduce using rule 65
	">"            reduce using rule 65
	">="           reduce using rule 65
	"="            reduce using rule 65
	"/="           reduce using rule 65
	"|"            reduce using rule 65
	"!|"           reduce using rule 65
	end            reduce using rule 65
	to             reduce using rule 65
	of             reduce using rule 65
	","            reduce using rule 65
	"."            reduce using rule 65
	";"            reduce using rule 65
	"->"           reduce using rule 65
	")"            reduce using rule 65
	is             reduce using rule 65


State 40

	Exp -> Float .                                      (rule 66)

	and            reduce using rule 66
	andalso        reduce using rule 66
	or             reduce using rule 66
	orelse         reduce using rule 66
	xor            reduce using rule 66
	band           reduce using rule 66
	bor            reduce using rule 66
	bsl            reduce using rule 66
	bsr            reduce using rule 66
	bxor           reduce using rule 66
	":"            reduce using rule 66
	"_"            reduce using rule 66
	"+"            reduce using rule 66
	"-"            reduce using rule 66
	"*"            reduce using rule 66
	"/"            reduce using rule 66
	div            reduce using rule 66
	rem            reduce using rule 66
	"<"            reduce using rule 66
	"=<"           reduce using rule 66
	">"            reduce using rule 66
	">="           reduce using rule 66
	"="            reduce using rule 66
	"/="           reduce using rule 66
	"|"            reduce using rule 66
	"!|"           reduce using rule 66
	end            reduce using rule 66
	to             reduce using rule 66
	of             reduce using rule 66
	","            reduce using rule 66
	"."            reduce using rule 66
	";"            reduce using rule 66
	"->"           reduce using rule 66
	")"            reduce using rule 66
	is             reduce using rule 66


State 41

	Exp -> String .                                     (rule 67)

	and            reduce using rule 67
	andalso        reduce using rule 67
	or             reduce using rule 67
	orelse         reduce using rule 67
	xor            reduce using rule 67
	band           reduce using rule 67
	bor            reduce using rule 67
	bsl            reduce using rule 67
	bsr            reduce using rule 67
	bxor           reduce using rule 67
	":"            reduce using rule 67
	"_"            reduce using rule 67
	"+"            reduce using rule 67
	"-"            reduce using rule 67
	"*"            reduce using rule 67
	"/"            reduce using rule 67
	div            reduce using rule 67
	rem            reduce using rule 67
	"<"            reduce using rule 67
	"=<"           reduce using rule 67
	">"            reduce using rule 67
	">="           reduce using rule 67
	"="            reduce using rule 67
	"/="           reduce using rule 67
	"|"            reduce using rule 67
	"!|"           reduce using rule 67
	end            reduce using rule 67
	to             reduce using rule 67
	of             reduce using rule 67
	","            reduce using rule 67
	"."            reduce using rule 67
	";"            reduce using rule 67
	"->"           reduce using rule 67
	")"            reduce using rule 67
	is             reduce using rule 67


State 42

	Exp -> not . Exp                                    (rule 79)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 66
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 43

	Exp -> bnot . Exp                                   (rule 85)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 65
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 44

	Exp -> length . Exp                                 (rule 88)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 64
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 45

	Exp -> "-" . Exp                                    (rule 95)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 63
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 46

	Exp -> otherwise .                                  (rule 68)

	and            reduce using rule 68
	andalso        reduce using rule 68
	or             reduce using rule 68
	orelse         reduce using rule 68
	xor            reduce using rule 68
	band           reduce using rule 68
	bor            reduce using rule 68
	bsl            reduce using rule 68
	bsr            reduce using rule 68
	bxor           reduce using rule 68
	":"            reduce using rule 68
	"_"            reduce using rule 68
	"+"            reduce using rule 68
	"-"            reduce using rule 68
	"*"            reduce using rule 68
	"/"            reduce using rule 68
	div            reduce using rule 68
	rem            reduce using rule 68
	"<"            reduce using rule 68
	"=<"           reduce using rule 68
	">"            reduce using rule 68
	">="           reduce using rule 68
	"="            reduce using rule 68
	"/="           reduce using rule 68
	"|"            reduce using rule 68
	"!|"           reduce using rule 68
	end            reduce using rule 68
	to             reduce using rule 68
	of             reduce using rule 68
	","            reduce using rule 68
	"."            reduce using rule 68
	";"            reduce using rule 68
	"->"           reduce using rule 68
	")"            reduce using rule 68
	is             reduce using rule 68


State 47

	Exp -> toBoolean . Exp                              (rule 70)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 62
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 48

	Exp -> toCharacter . Exp                            (rule 71)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 61
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 49

	Exp -> toFloat . Exp                                (rule 72)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 60
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 50

	Exp -> toInteger . Exp                              (rule 73)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 59
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 51

	Exp -> "(" . Exp ")"                                (rule 62)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 58
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 52

	Bool -> boolLit .                                   (rule 104)

	and            reduce using rule 104
	andalso        reduce using rule 104
	or             reduce using rule 104
	orelse         reduce using rule 104
	xor            reduce using rule 104
	band           reduce using rule 104
	bor            reduce using rule 104
	bsl            reduce using rule 104
	bsr            reduce using rule 104
	bxor           reduce using rule 104
	":"            reduce using rule 104
	"_"            reduce using rule 104
	"+"            reduce using rule 104
	"-"            reduce using rule 104
	"*"            reduce using rule 104
	"/"            reduce using rule 104
	div            reduce using rule 104
	rem            reduce using rule 104
	"<"            reduce using rule 104
	"=<"           reduce using rule 104
	">"            reduce using rule 104
	">="           reduce using rule 104
	"="            reduce using rule 104
	"/="           reduce using rule 104
	"|"            reduce using rule 104
	"!|"           reduce using rule 104
	end            reduce using rule 104
	to             reduce using rule 104
	of             reduce using rule 104
	","            reduce using rule 104
	"."            reduce using rule 104
	";"            reduce using rule 104
	"->"           reduce using rule 104
	")"            reduce using rule 104
	is             reduce using rule 104


State 53

	Char -> charLit .                                   (rule 105)

	and            reduce using rule 105
	andalso        reduce using rule 105
	or             reduce using rule 105
	orelse         reduce using rule 105
	xor            reduce using rule 105
	band           reduce using rule 105
	bor            reduce using rule 105
	bsl            reduce using rule 105
	bsr            reduce using rule 105
	bxor           reduce using rule 105
	":"            reduce using rule 105
	"_"            reduce using rule 105
	"+"            reduce using rule 105
	"-"            reduce using rule 105
	"*"            reduce using rule 105
	"/"            reduce using rule 105
	div            reduce using rule 105
	rem            reduce using rule 105
	"<"            reduce using rule 105
	"=<"           reduce using rule 105
	">"            reduce using rule 105
	">="           reduce using rule 105
	"="            reduce using rule 105
	"/="           reduce using rule 105
	"|"            reduce using rule 105
	"!|"           reduce using rule 105
	end            reduce using rule 105
	to             reduce using rule 105
	of             reduce using rule 105
	","            reduce using rule 105
	"."            reduce using rule 105
	";"            reduce using rule 105
	"->"           reduce using rule 105
	")"            reduce using rule 105
	is             reduce using rule 105


State 54

	Float -> floatLit .                                 (rule 107)

	and            reduce using rule 107
	andalso        reduce using rule 107
	or             reduce using rule 107
	orelse         reduce using rule 107
	xor            reduce using rule 107
	band           reduce using rule 107
	bor            reduce using rule 107
	bsl            reduce using rule 107
	bsr            reduce using rule 107
	bxor           reduce using rule 107
	":"            reduce using rule 107
	"_"            reduce using rule 107
	"+"            reduce using rule 107
	"-"            reduce using rule 107
	"*"            reduce using rule 107
	"/"            reduce using rule 107
	div            reduce using rule 107
	rem            reduce using rule 107
	"<"            reduce using rule 107
	"=<"           reduce using rule 107
	">"            reduce using rule 107
	">="           reduce using rule 107
	"="            reduce using rule 107
	"/="           reduce using rule 107
	"|"            reduce using rule 107
	"!|"           reduce using rule 107
	end            reduce using rule 107
	to             reduce using rule 107
	of             reduce using rule 107
	","            reduce using rule 107
	"."            reduce using rule 107
	";"            reduce using rule 107
	"->"           reduce using rule 107
	")"            reduce using rule 107
	is             reduce using rule 107


State 55

	String -> stringLit .                               (rule 108)

	and            reduce using rule 108
	andalso        reduce using rule 108
	or             reduce using rule 108
	orelse         reduce using rule 108
	xor            reduce using rule 108
	band           reduce using rule 108
	bor            reduce using rule 108
	bsl            reduce using rule 108
	bsr            reduce using rule 108
	bxor           reduce using rule 108
	":"            reduce using rule 108
	"_"            reduce using rule 108
	"+"            reduce using rule 108
	"-"            reduce using rule 108
	"*"            reduce using rule 108
	"/"            reduce using rule 108
	div            reduce using rule 108
	rem            reduce using rule 108
	"<"            reduce using rule 108
	"=<"           reduce using rule 108
	">"            reduce using rule 108
	">="           reduce using rule 108
	"="            reduce using rule 108
	"/="           reduce using rule 108
	"|"            reduce using rule 108
	"!|"           reduce using rule 108
	end            reduce using rule 108
	to             reduce using rule 108
	of             reduce using rule 108
	","            reduce using rule 108
	"."            reduce using rule 108
	";"            reduce using rule 108
	"->"           reduce using rule 108
	")"            reduce using rule 108
	is             reduce using rule 108


State 56

	ArraySize -> ArraySize ":" . Int                    (rule 32)

	intLit         shift, and enter state 24

	Int            goto state 57

State 57

	ArraySize -> ArraySize ":" Int .                    (rule 32)

	":"            reduce using rule 32
	varId          reduce using rule 32


State 58

	Exp -> "(" Exp . ")"                                (rule 62)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	")"            shift, and enter state 126


State 59

	Exp -> toInteger Exp .                              (rule 73)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 73
	andalso        reduce using rule 73
	or             reduce using rule 73
	orelse         reduce using rule 73
	xor            reduce using rule 73
	band           reduce using rule 73
	bor            reduce using rule 73
	bsl            reduce using rule 73
	bsr            reduce using rule 73
	bxor           reduce using rule 73
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 73
	"-"            reduce using rule 73
	"*"            reduce using rule 73
	"/"            reduce using rule 73
	div            reduce using rule 73
	rem            reduce using rule 73
	"<"            reduce using rule 73
	"=<"           reduce using rule 73
	">"            reduce using rule 73
	">="           reduce using rule 73
	"="            reduce using rule 73
	"/="           reduce using rule 73
	"|"            reduce using rule 73
	"!|"           reduce using rule 73
	end            reduce using rule 73
	to             reduce using rule 73
	of             reduce using rule 73
	","            reduce using rule 73
	"."            reduce using rule 73
	";"            reduce using rule 73
	"->"           reduce using rule 73
	")"            reduce using rule 73
	is             reduce using rule 73


State 60

	Exp -> toFloat Exp .                                (rule 72)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 72
	andalso        reduce using rule 72
	or             reduce using rule 72
	orelse         reduce using rule 72
	xor            reduce using rule 72
	band           reduce using rule 72
	bor            reduce using rule 72
	bsl            reduce using rule 72
	bsr            reduce using rule 72
	bxor           reduce using rule 72
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 72
	"-"            reduce using rule 72
	"*"            reduce using rule 72
	"/"            reduce using rule 72
	div            reduce using rule 72
	rem            reduce using rule 72
	"<"            reduce using rule 72
	"=<"           reduce using rule 72
	">"            reduce using rule 72
	">="           reduce using rule 72
	"="            reduce using rule 72
	"/="           reduce using rule 72
	"|"            reduce using rule 72
	"!|"           reduce using rule 72
	end            reduce using rule 72
	to             reduce using rule 72
	of             reduce using rule 72
	","            reduce using rule 72
	"."            reduce using rule 72
	";"            reduce using rule 72
	"->"           reduce using rule 72
	")"            reduce using rule 72
	is             reduce using rule 72


State 61

	Exp -> toCharacter Exp .                            (rule 71)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 71
	andalso        reduce using rule 71
	or             reduce using rule 71
	orelse         reduce using rule 71
	xor            reduce using rule 71
	band           reduce using rule 71
	bor            reduce using rule 71
	bsl            reduce using rule 71
	bsr            reduce using rule 71
	bxor           reduce using rule 71
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 71
	"-"            reduce using rule 71
	"*"            reduce using rule 71
	"/"            reduce using rule 71
	div            reduce using rule 71
	rem            reduce using rule 71
	"<"            reduce using rule 71
	"=<"           reduce using rule 71
	">"            reduce using rule 71
	">="           reduce using rule 71
	"="            reduce using rule 71
	"/="           reduce using rule 71
	"|"            reduce using rule 71
	"!|"           reduce using rule 71
	end            reduce using rule 71
	to             reduce using rule 71
	of             reduce using rule 71
	","            reduce using rule 71
	"."            reduce using rule 71
	";"            reduce using rule 71
	"->"           reduce using rule 71
	")"            reduce using rule 71
	is             reduce using rule 71


State 62

	Exp -> toBoolean Exp .                              (rule 70)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 70
	andalso        reduce using rule 70
	or             reduce using rule 70
	orelse         reduce using rule 70
	xor            reduce using rule 70
	band           reduce using rule 70
	bor            reduce using rule 70
	bsl            reduce using rule 70
	bsr            reduce using rule 70
	bxor           reduce using rule 70
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 70
	"-"            reduce using rule 70
	"*"            reduce using rule 70
	"/"            reduce using rule 70
	div            reduce using rule 70
	rem            reduce using rule 70
	"<"            reduce using rule 70
	"=<"           reduce using rule 70
	">"            reduce using rule 70
	">="           reduce using rule 70
	"="            reduce using rule 70
	"/="           reduce using rule 70
	"|"            reduce using rule 70
	"!|"           reduce using rule 70
	end            reduce using rule 70
	to             reduce using rule 70
	of             reduce using rule 70
	","            reduce using rule 70
	"."            reduce using rule 70
	";"            reduce using rule 70
	"->"           reduce using rule 70
	")"            reduce using rule 70
	is             reduce using rule 70


State 63

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> "-" Exp .                                    (rule 95)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 95
	andalso        reduce using rule 95
	or             reduce using rule 95
	orelse         reduce using rule 95
	xor            reduce using rule 95
	band           reduce using rule 95
	bor            reduce using rule 95
	bsl            reduce using rule 95
	bsr            reduce using rule 95
	bxor           reduce using rule 95
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 95
	"-"            reduce using rule 95
	"*"            reduce using rule 95
	"/"            reduce using rule 95
	div            reduce using rule 95
	rem            reduce using rule 95
	"<"            reduce using rule 95
	"=<"           reduce using rule 95
	">"            reduce using rule 95
	">="           reduce using rule 95
	"="            reduce using rule 95
	"/="           reduce using rule 95
	"|"            reduce using rule 95
	"!|"           reduce using rule 95
	end            reduce using rule 95
	to             reduce using rule 95
	of             reduce using rule 95
	","            reduce using rule 95
	"."            reduce using rule 95
	";"            reduce using rule 95
	"->"           reduce using rule 95
	")"            reduce using rule 95
	is             reduce using rule 95


State 64

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> length Exp .                                 (rule 88)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 88
	andalso        reduce using rule 88
	or             reduce using rule 88
	orelse         reduce using rule 88
	xor            reduce using rule 88
	band           reduce using rule 88
	bor            reduce using rule 88
	bsl            reduce using rule 88
	bsr            reduce using rule 88
	bxor           reduce using rule 88
	":"            reduce using rule 88
	"_"            reduce using rule 88
	"+"            reduce using rule 88
	"-"            reduce using rule 88
	"*"            reduce using rule 88
	"/"            reduce using rule 88
	div            reduce using rule 88
	rem            reduce using rule 88
	"<"            reduce using rule 88
	"=<"           reduce using rule 88
	">"            reduce using rule 88
	">="           reduce using rule 88
	"="            reduce using rule 88
	"/="           reduce using rule 88
	"|"            reduce using rule 88
	"!|"           reduce using rule 88
	end            reduce using rule 88
	to             reduce using rule 88
	of             reduce using rule 88
	","            reduce using rule 88
	"."            reduce using rule 88
	";"            reduce using rule 88
	"->"           reduce using rule 88
	")"            reduce using rule 88
	is             reduce using rule 88


State 65

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> bnot Exp .                                   (rule 85)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 85
	andalso        reduce using rule 85
	or             reduce using rule 85
	orelse         reduce using rule 85
	xor            reduce using rule 85
	band           reduce using rule 85
	bor            reduce using rule 85
	bsl            reduce using rule 85
	bsr            reduce using rule 85
	bxor           reduce using rule 85
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 85
	"-"            reduce using rule 85
	"*"            reduce using rule 85
	"/"            reduce using rule 85
	div            reduce using rule 85
	rem            reduce using rule 85
	"<"            reduce using rule 85
	"=<"           reduce using rule 85
	">"            reduce using rule 85
	">="           reduce using rule 85
	"="            reduce using rule 85
	"/="           reduce using rule 85
	"|"            reduce using rule 85
	"!|"           reduce using rule 85
	end            reduce using rule 85
	to             reduce using rule 85
	of             reduce using rule 85
	","            reduce using rule 85
	"."            reduce using rule 85
	";"            reduce using rule 85
	"->"           reduce using rule 85
	")"            reduce using rule 85
	is             reduce using rule 85


State 66

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> not Exp .                                    (rule 79)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 79
	andalso        reduce using rule 79
	or             reduce using rule 79
	orelse         reduce using rule 79
	xor            reduce using rule 79
	band           reduce using rule 79
	bor            reduce using rule 79
	bsl            reduce using rule 79
	bsr            reduce using rule 79
	bxor           reduce using rule 79
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 79
	"-"            reduce using rule 79
	"*"            reduce using rule 79
	"/"            reduce using rule 79
	div            reduce using rule 79
	rem            reduce using rule 79
	"<"            reduce using rule 79
	"=<"           reduce using rule 79
	">"            reduce using rule 79
	">="           reduce using rule 79
	"="            reduce using rule 79
	"/="           reduce using rule 79
	"|"            reduce using rule 79
	"!|"           reduce using rule 79
	end            reduce using rule 79
	to             reduce using rule 79
	of             reduce using rule 79
	","            reduce using rule 79
	"."            reduce using rule 79
	";"            reduce using rule 79
	"->"           reduce using rule 79
	")"            reduce using rule 79
	is             reduce using rule 79


State 67

	Exp -> Exp and . Exp                                (rule 74)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 125
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 68

	Exp -> Exp andalso . Exp                            (rule 75)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 124
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 69

	Exp -> Exp or . Exp                                 (rule 76)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 123
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 70

	Exp -> Exp orelse . Exp                             (rule 77)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 122
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 71

	Exp -> Exp xor . Exp                                (rule 78)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 121
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 72

	Exp -> Exp band . Exp                               (rule 80)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 120
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 73

	Exp -> Exp bor . Exp                                (rule 81)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 119
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 74

	Exp -> Exp bsl . Exp                                (rule 82)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 118
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 75

	Exp -> Exp bsr . Exp                                (rule 83)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 117
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 76

	Exp -> Exp bxor . Exp                               (rule 84)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 116
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 77

	Exp -> Exp ":" . Exp                                (rule 86)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 115
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 78

	Exp -> Exp "_" . Exp                                (rule 87)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 114
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 79

	Exp -> Exp "+" . Exp                                (rule 89)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 113
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 80

	Exp -> Exp "-" . Exp                                (rule 90)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 112
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 81

	Exp -> Exp "*" . Exp                                (rule 91)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 111
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 82

	Exp -> Exp "/" . Exp                                (rule 92)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 110
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 83

	Exp -> Exp div . Exp                                (rule 93)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 109
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 84

	Exp -> Exp rem . Exp                                (rule 94)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 108
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 85

	Exp -> Exp "<" . Exp                                (rule 96)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 107
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 86

	Exp -> Exp "=<" . Exp                               (rule 97)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 106
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 87

	Exp -> Exp ">" . Exp                                (rule 98)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 105
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 88

	Exp -> Exp ">=" . Exp                               (rule 99)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 104
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 89

	Exp -> Exp "=" . Exp                                (rule 100)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 103
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 90

	Exp -> Exp "/=" . Exp                               (rule 101)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 102
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 91

	Exp -> Exp "|" . Exp                                (rule 102)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 101
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 92

	Exp -> Exp "!|" . Exp                               (rule 103)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 100
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 93

	Decs -> Decs "," . Declaration                      (rule 13)

	genId          shift, and enter state 11

	GenId          goto state 4
	Declaration    goto state 99
	Type           goto state 31

State 94

	TopDec -> proc GenId "(" Params ")" . ":-" Insts "."    (rule 4)

	":-"           shift, and enter state 98


State 95

	TopDec -> either GenId ":-" Decs "." .              (rule 5)

	proc           reduce using rule 5
	either         reduce using rule 5
	record         reduce using rule 5
	genId          reduce using rule 5
	%eof           reduce using rule 5


State 96

	Declaration -> Type VarId .                         (rule 27)

	from           reduce using rule 27
	","            reduce using rule 27
	"."            reduce using rule 27
	")"            reduce using rule 27


State 97

	TopDec -> record GenId ":-" Decs "." .              (rule 6)

	proc           reduce using rule 6
	either         reduce using rule 6
	record         reduce using rule 6
	genId          reduce using rule 6
	%eof           reduce using rule 6


State 98

	TopDec -> proc GenId "(" Params ")" ":-" . Insts "."    (rule 4)

	for            shift, and enter state 140
	if             shift, and enter state 141
	while          shift, and enter state 142
	case           shift, and enter state 143
	finish         shift, and enter state 144
	read           shift, and enter state 145
	write          shift, and enter state 146
	varId          shift, and enter state 17
	genId          shift, and enter state 11

	GenId          goto state 127
	Insts          goto state 128
	Inst           goto state 129
	Declaration    goto state 130
	Initialization goto state 131
	Type           goto state 7
	Assign         goto state 132
	Lval           goto state 133
	VarId          goto state 134
	Call           goto state 135
	If             goto state 136
	Case           goto state 137
	For            goto state 138
	While          goto state 139

State 99

	Decs -> Decs "," Declaration .                      (rule 13)

	","            reduce using rule 13
	"."            reduce using rule 13
	")"            reduce using rule 13


State 100

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)
	Exp -> Exp "!|" Exp .                               (rule 103)

	and            reduce using rule 103
	andalso        reduce using rule 103
	or             reduce using rule 103
	orelse         reduce using rule 103
	xor            reduce using rule 103
	band           reduce using rule 103
	bor            reduce using rule 103
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 103
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            reduce using rule 103
	"/="           reduce using rule 103
	"|"            fail
	"!|"           fail
	end            reduce using rule 103
	to             reduce using rule 103
	of             reduce using rule 103
	","            reduce using rule 103
	"."            reduce using rule 103
	";"            reduce using rule 103
	"->"           reduce using rule 103
	")"            reduce using rule 103
	is             reduce using rule 103


State 101

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp "|" Exp .                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 102
	andalso        reduce using rule 102
	or             reduce using rule 102
	orelse         reduce using rule 102
	xor            reduce using rule 102
	band           reduce using rule 102
	bor            reduce using rule 102
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 102
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            reduce using rule 102
	"/="           reduce using rule 102
	"|"            fail
	"!|"           fail
	end            reduce using rule 102
	to             reduce using rule 102
	of             reduce using rule 102
	","            reduce using rule 102
	"."            reduce using rule 102
	";"            reduce using rule 102
	"->"           reduce using rule 102
	")"            reduce using rule 102
	is             reduce using rule 102


State 102

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp "/=" Exp .                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 101
	andalso        reduce using rule 101
	or             reduce using rule 101
	orelse         reduce using rule 101
	xor            reduce using rule 101
	band           reduce using rule 101
	bor            reduce using rule 101
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 101
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            reduce using rule 101
	"/="           reduce using rule 101
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 101
	to             reduce using rule 101
	of             reduce using rule 101
	","            reduce using rule 101
	"."            reduce using rule 101
	";"            reduce using rule 101
	"->"           reduce using rule 101
	")"            reduce using rule 101
	is             reduce using rule 101


State 103

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp "=" Exp .                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 100
	andalso        reduce using rule 100
	or             reduce using rule 100
	orelse         reduce using rule 100
	xor            reduce using rule 100
	band           reduce using rule 100
	bor            reduce using rule 100
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 100
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            reduce using rule 100
	"/="           reduce using rule 100
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 100
	to             reduce using rule 100
	of             reduce using rule 100
	","            reduce using rule 100
	"."            reduce using rule 100
	";"            reduce using rule 100
	"->"           reduce using rule 100
	")"            reduce using rule 100
	is             reduce using rule 100


State 104

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp ">=" Exp .                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 99
	andalso        reduce using rule 99
	or             reduce using rule 99
	orelse         reduce using rule 99
	xor            reduce using rule 99
	band           reduce using rule 99
	bor            reduce using rule 99
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 99
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 99
	"/="           reduce using rule 99
	"|"            reduce using rule 99
	"!|"           reduce using rule 99
	end            reduce using rule 99
	to             reduce using rule 99
	of             reduce using rule 99
	","            reduce using rule 99
	"."            reduce using rule 99
	";"            reduce using rule 99
	"->"           reduce using rule 99
	")"            reduce using rule 99
	is             reduce using rule 99


State 105

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp ">" Exp .                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 98
	andalso        reduce using rule 98
	or             reduce using rule 98
	orelse         reduce using rule 98
	xor            reduce using rule 98
	band           reduce using rule 98
	bor            reduce using rule 98
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 98
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 98
	"/="           reduce using rule 98
	"|"            reduce using rule 98
	"!|"           reduce using rule 98
	end            reduce using rule 98
	to             reduce using rule 98
	of             reduce using rule 98
	","            reduce using rule 98
	"."            reduce using rule 98
	";"            reduce using rule 98
	"->"           reduce using rule 98
	")"            reduce using rule 98
	is             reduce using rule 98


State 106

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp "=<" Exp .                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 97
	andalso        reduce using rule 97
	or             reduce using rule 97
	orelse         reduce using rule 97
	xor            reduce using rule 97
	band           reduce using rule 97
	bor            reduce using rule 97
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 97
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 97
	"/="           reduce using rule 97
	"|"            reduce using rule 97
	"!|"           reduce using rule 97
	end            reduce using rule 97
	to             reduce using rule 97
	of             reduce using rule 97
	","            reduce using rule 97
	"."            reduce using rule 97
	";"            reduce using rule 97
	"->"           reduce using rule 97
	")"            reduce using rule 97
	is             reduce using rule 97


State 107

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp "<" Exp .                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 96
	andalso        reduce using rule 96
	or             reduce using rule 96
	orelse         reduce using rule 96
	xor            reduce using rule 96
	band           reduce using rule 96
	bor            reduce using rule 96
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 96
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            fail
	"=<"           fail
	">"            fail
	">="           fail
	"="            reduce using rule 96
	"/="           reduce using rule 96
	"|"            reduce using rule 96
	"!|"           reduce using rule 96
	end            reduce using rule 96
	to             reduce using rule 96
	of             reduce using rule 96
	","            reduce using rule 96
	"."            reduce using rule 96
	";"            reduce using rule 96
	"->"           reduce using rule 96
	")"            reduce using rule 96
	is             reduce using rule 96


State 108

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp rem Exp .                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 94
	andalso        reduce using rule 94
	or             reduce using rule 94
	orelse         reduce using rule 94
	xor            reduce using rule 94
	band           reduce using rule 94
	bor            reduce using rule 94
	bsl            reduce using rule 94
	bsr            reduce using rule 94
	bxor           reduce using rule 94
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 94
	"-"            reduce using rule 94
	"*"            reduce using rule 94
	"/"            reduce using rule 94
	div            reduce using rule 94
	rem            reduce using rule 94
	"<"            reduce using rule 94
	"=<"           reduce using rule 94
	">"            reduce using rule 94
	">="           reduce using rule 94
	"="            reduce using rule 94
	"/="           reduce using rule 94
	"|"            reduce using rule 94
	"!|"           reduce using rule 94
	end            reduce using rule 94
	to             reduce using rule 94
	of             reduce using rule 94
	","            reduce using rule 94
	"."            reduce using rule 94
	";"            reduce using rule 94
	"->"           reduce using rule 94
	")"            reduce using rule 94
	is             reduce using rule 94


State 109

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp div Exp .                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 93
	andalso        reduce using rule 93
	or             reduce using rule 93
	orelse         reduce using rule 93
	xor            reduce using rule 93
	band           reduce using rule 93
	bor            reduce using rule 93
	bsl            reduce using rule 93
	bsr            reduce using rule 93
	bxor           reduce using rule 93
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 93
	"-"            reduce using rule 93
	"*"            reduce using rule 93
	"/"            reduce using rule 93
	div            reduce using rule 93
	rem            reduce using rule 93
	"<"            reduce using rule 93
	"=<"           reduce using rule 93
	">"            reduce using rule 93
	">="           reduce using rule 93
	"="            reduce using rule 93
	"/="           reduce using rule 93
	"|"            reduce using rule 93
	"!|"           reduce using rule 93
	end            reduce using rule 93
	to             reduce using rule 93
	of             reduce using rule 93
	","            reduce using rule 93
	"."            reduce using rule 93
	";"            reduce using rule 93
	"->"           reduce using rule 93
	")"            reduce using rule 93
	is             reduce using rule 93


State 110

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp "/" Exp .                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 92
	andalso        reduce using rule 92
	or             reduce using rule 92
	orelse         reduce using rule 92
	xor            reduce using rule 92
	band           reduce using rule 92
	bor            reduce using rule 92
	bsl            reduce using rule 92
	bsr            reduce using rule 92
	bxor           reduce using rule 92
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 92
	"-"            reduce using rule 92
	"*"            reduce using rule 92
	"/"            reduce using rule 92
	div            reduce using rule 92
	rem            reduce using rule 92
	"<"            reduce using rule 92
	"=<"           reduce using rule 92
	">"            reduce using rule 92
	">="           reduce using rule 92
	"="            reduce using rule 92
	"/="           reduce using rule 92
	"|"            reduce using rule 92
	"!|"           reduce using rule 92
	end            reduce using rule 92
	to             reduce using rule 92
	of             reduce using rule 92
	","            reduce using rule 92
	"."            reduce using rule 92
	";"            reduce using rule 92
	"->"           reduce using rule 92
	")"            reduce using rule 92
	is             reduce using rule 92


State 111

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp "*" Exp .                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 91
	andalso        reduce using rule 91
	or             reduce using rule 91
	orelse         reduce using rule 91
	xor            reduce using rule 91
	band           reduce using rule 91
	bor            reduce using rule 91
	bsl            reduce using rule 91
	bsr            reduce using rule 91
	bxor           reduce using rule 91
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 91
	"-"            reduce using rule 91
	"*"            reduce using rule 91
	"/"            reduce using rule 91
	div            reduce using rule 91
	rem            reduce using rule 91
	"<"            reduce using rule 91
	"=<"           reduce using rule 91
	">"            reduce using rule 91
	">="           reduce using rule 91
	"="            reduce using rule 91
	"/="           reduce using rule 91
	"|"            reduce using rule 91
	"!|"           reduce using rule 91
	end            reduce using rule 91
	to             reduce using rule 91
	of             reduce using rule 91
	","            reduce using rule 91
	"."            reduce using rule 91
	";"            reduce using rule 91
	"->"           reduce using rule 91
	")"            reduce using rule 91
	is             reduce using rule 91


State 112

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp "-" Exp .                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 90
	andalso        reduce using rule 90
	or             reduce using rule 90
	orelse         reduce using rule 90
	xor            reduce using rule 90
	band           reduce using rule 90
	bor            reduce using rule 90
	bsl            reduce using rule 90
	bsr            reduce using rule 90
	bxor           reduce using rule 90
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 90
	"-"            reduce using rule 90
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            reduce using rule 90
	"=<"           reduce using rule 90
	">"            reduce using rule 90
	">="           reduce using rule 90
	"="            reduce using rule 90
	"/="           reduce using rule 90
	"|"            reduce using rule 90
	"!|"           reduce using rule 90
	end            reduce using rule 90
	to             reduce using rule 90
	of             reduce using rule 90
	","            reduce using rule 90
	"."            reduce using rule 90
	";"            reduce using rule 90
	"->"           reduce using rule 90
	")"            reduce using rule 90
	is             reduce using rule 90


State 113

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp "+" Exp .                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 89
	andalso        reduce using rule 89
	or             reduce using rule 89
	orelse         reduce using rule 89
	xor            reduce using rule 89
	band           reduce using rule 89
	bor            reduce using rule 89
	bsl            reduce using rule 89
	bsr            reduce using rule 89
	bxor           reduce using rule 89
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            reduce using rule 89
	"-"            reduce using rule 89
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            reduce using rule 89
	"=<"           reduce using rule 89
	">"            reduce using rule 89
	">="           reduce using rule 89
	"="            reduce using rule 89
	"/="           reduce using rule 89
	"|"            reduce using rule 89
	"!|"           reduce using rule 89
	end            reduce using rule 89
	to             reduce using rule 89
	of             reduce using rule 89
	","            reduce using rule 89
	"."            reduce using rule 89
	";"            reduce using rule 89
	"->"           reduce using rule 89
	")"            reduce using rule 89
	is             reduce using rule 89


State 114

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp "_" Exp .                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 87
	andalso        reduce using rule 87
	or             reduce using rule 87
	orelse         reduce using rule 87
	xor            reduce using rule 87
	band           reduce using rule 87
	bor            reduce using rule 87
	bsl            reduce using rule 87
	bsr            reduce using rule 87
	bxor           reduce using rule 87
	":"            shift, and enter state 77
	"_"            reduce using rule 87
	"+"            reduce using rule 87
	"-"            reduce using rule 87
	"*"            reduce using rule 87
	"/"            reduce using rule 87
	div            reduce using rule 87
	rem            reduce using rule 87
	"<"            reduce using rule 87
	"=<"           reduce using rule 87
	">"            reduce using rule 87
	">="           reduce using rule 87
	"="            reduce using rule 87
	"/="           reduce using rule 87
	"|"            reduce using rule 87
	"!|"           reduce using rule 87
	end            reduce using rule 87
	to             reduce using rule 87
	of             reduce using rule 87
	","            reduce using rule 87
	"."            reduce using rule 87
	";"            reduce using rule 87
	"->"           reduce using rule 87
	")"            reduce using rule 87
	is             reduce using rule 87


State 115

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp ":" Exp .                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 86
	andalso        reduce using rule 86
	or             reduce using rule 86
	orelse         reduce using rule 86
	xor            reduce using rule 86
	band           reduce using rule 86
	bor            reduce using rule 86
	bsl            reduce using rule 86
	bsr            reduce using rule 86
	bxor           reduce using rule 86
	":"            reduce using rule 86
	"_"            reduce using rule 86
	"+"            reduce using rule 86
	"-"            reduce using rule 86
	"*"            reduce using rule 86
	"/"            reduce using rule 86
	div            reduce using rule 86
	rem            reduce using rule 86
	"<"            reduce using rule 86
	"=<"           reduce using rule 86
	">"            reduce using rule 86
	">="           reduce using rule 86
	"="            reduce using rule 86
	"/="           reduce using rule 86
	"|"            reduce using rule 86
	"!|"           reduce using rule 86
	end            reduce using rule 86
	to             reduce using rule 86
	of             reduce using rule 86
	","            reduce using rule 86
	"."            reduce using rule 86
	";"            reduce using rule 86
	"->"           reduce using rule 86
	")"            reduce using rule 86
	is             reduce using rule 86


State 116

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp bxor Exp .                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 84
	andalso        reduce using rule 84
	or             reduce using rule 84
	orelse         reduce using rule 84
	xor            reduce using rule 84
	band           shift, and enter state 72
	bor            reduce using rule 84
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 84
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 84
	to             reduce using rule 84
	of             reduce using rule 84
	","            reduce using rule 84
	"."            reduce using rule 84
	";"            reduce using rule 84
	"->"           reduce using rule 84
	")"            reduce using rule 84
	is             reduce using rule 84


State 117

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp bsr Exp .                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 83
	andalso        reduce using rule 83
	or             reduce using rule 83
	orelse         reduce using rule 83
	xor            reduce using rule 83
	band           reduce using rule 83
	bor            reduce using rule 83
	bsl            reduce using rule 83
	bsr            reduce using rule 83
	bxor           reduce using rule 83
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            reduce using rule 83
	"=<"           reduce using rule 83
	">"            reduce using rule 83
	">="           reduce using rule 83
	"="            reduce using rule 83
	"/="           reduce using rule 83
	"|"            reduce using rule 83
	"!|"           reduce using rule 83
	end            reduce using rule 83
	to             reduce using rule 83
	of             reduce using rule 83
	","            reduce using rule 83
	"."            reduce using rule 83
	";"            reduce using rule 83
	"->"           reduce using rule 83
	")"            reduce using rule 83
	is             reduce using rule 83


State 118

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp bsl Exp .                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 82
	andalso        reduce using rule 82
	or             reduce using rule 82
	orelse         reduce using rule 82
	xor            reduce using rule 82
	band           reduce using rule 82
	bor            reduce using rule 82
	bsl            reduce using rule 82
	bsr            reduce using rule 82
	bxor           reduce using rule 82
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            reduce using rule 82
	"=<"           reduce using rule 82
	">"            reduce using rule 82
	">="           reduce using rule 82
	"="            reduce using rule 82
	"/="           reduce using rule 82
	"|"            reduce using rule 82
	"!|"           reduce using rule 82
	end            reduce using rule 82
	to             reduce using rule 82
	of             reduce using rule 82
	","            reduce using rule 82
	"."            reduce using rule 82
	";"            reduce using rule 82
	"->"           reduce using rule 82
	")"            reduce using rule 82
	is             reduce using rule 82


State 119

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp bor Exp .                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 81
	andalso        reduce using rule 81
	or             reduce using rule 81
	orelse         reduce using rule 81
	xor            reduce using rule 81
	band           shift, and enter state 72
	bor            reduce using rule 81
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 81
	to             reduce using rule 81
	of             reduce using rule 81
	","            reduce using rule 81
	"."            reduce using rule 81
	";"            reduce using rule 81
	"->"           reduce using rule 81
	")"            reduce using rule 81
	is             reduce using rule 81


State 120

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp band Exp .                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 80
	andalso        reduce using rule 80
	or             reduce using rule 80
	orelse         reduce using rule 80
	xor            reduce using rule 80
	band           reduce using rule 80
	bor            reduce using rule 80
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           reduce using rule 80
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 80
	to             reduce using rule 80
	of             reduce using rule 80
	","            reduce using rule 80
	"."            reduce using rule 80
	";"            reduce using rule 80
	"->"           reduce using rule 80
	")"            reduce using rule 80
	is             reduce using rule 80


State 121

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp xor Exp .                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        reduce using rule 78
	or             reduce using rule 78
	orelse         reduce using rule 78
	xor            reduce using rule 78
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 78
	to             reduce using rule 78
	of             reduce using rule 78
	","            reduce using rule 78
	"."            reduce using rule 78
	";"            reduce using rule 78
	"->"           reduce using rule 78
	")"            reduce using rule 78
	is             reduce using rule 78


State 122

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp orelse Exp .                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         reduce using rule 77
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 77
	to             reduce using rule 77
	of             reduce using rule 77
	","            reduce using rule 77
	"."            reduce using rule 77
	";"            reduce using rule 77
	"->"           reduce using rule 77
	")"            reduce using rule 77
	is             reduce using rule 77


State 123

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp or Exp .                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        reduce using rule 76
	or             reduce using rule 76
	orelse         reduce using rule 76
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 76
	to             reduce using rule 76
	of             reduce using rule 76
	","            reduce using rule 76
	"."            reduce using rule 76
	";"            reduce using rule 76
	"->"           reduce using rule 76
	")"            reduce using rule 76
	is             reduce using rule 76


State 124

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp andalso Exp .                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        reduce using rule 75
	or             shift, and enter state 69
	orelse         reduce using rule 75
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 75
	to             reduce using rule 75
	of             reduce using rule 75
	","            reduce using rule 75
	"."            reduce using rule 75
	";"            reduce using rule 75
	"->"           reduce using rule 75
	")"            reduce using rule 75
	is             reduce using rule 75


State 125

	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp and Exp .                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            reduce using rule 74
	andalso        reduce using rule 74
	or             reduce using rule 74
	orelse         reduce using rule 74
	xor            reduce using rule 74
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 74
	to             reduce using rule 74
	of             reduce using rule 74
	","            reduce using rule 74
	"."            reduce using rule 74
	";"            reduce using rule 74
	"->"           reduce using rule 74
	")"            reduce using rule 74
	is             reduce using rule 74


State 126

	Exp -> "(" Exp ")" .                                (rule 62)

	and            reduce using rule 62
	andalso        reduce using rule 62
	or             reduce using rule 62
	orelse         reduce using rule 62
	xor            reduce using rule 62
	band           reduce using rule 62
	bor            reduce using rule 62
	bsl            reduce using rule 62
	bsr            reduce using rule 62
	bxor           reduce using rule 62
	":"            reduce using rule 62
	"_"            reduce using rule 62
	"+"            reduce using rule 62
	"-"            reduce using rule 62
	"*"            reduce using rule 62
	"/"            reduce using rule 62
	div            reduce using rule 62
	rem            reduce using rule 62
	"<"            reduce using rule 62
	"=<"           reduce using rule 62
	">"            reduce using rule 62
	">="           reduce using rule 62
	"="            reduce using rule 62
	"/="           reduce using rule 62
	"|"            reduce using rule 62
	"!|"           reduce using rule 62
	end            reduce using rule 62
	to             reduce using rule 62
	of             reduce using rule 62
	","            reduce using rule 62
	"."            reduce using rule 62
	";"            reduce using rule 62
	"->"           reduce using rule 62
	")"            reduce using rule 62
	is             reduce using rule 62


State 127

	Type -> GenId .                                     (rule 29)
	Type -> GenId . ":" ArraySize                       (rule 30)
	Call -> GenId . "(" Args ")"                        (rule 38)

	":"            shift, and enter state 20
	"("            shift, and enter state 163
	varId          reduce using rule 29


State 128

	TopDec -> proc GenId "(" Params ")" ":-" Insts . "."    (rule 4)
	Insts -> Insts . "," Inst                           (rule 15)

	","            shift, and enter state 161
	"."            shift, and enter state 162


State 129

	Insts -> Inst .                                     (rule 14)

	end            reduce using rule 14
	","            reduce using rule 14
	"."            reduce using rule 14
	";"            reduce using rule 14


State 130

	Inst -> Declaration .                               (rule 16)

	end            reduce using rule 16
	","            reduce using rule 16
	"."            reduce using rule 16
	";"            reduce using rule 16


State 131

	Inst -> Initialization .                            (rule 17)

	end            reduce using rule 17
	","            reduce using rule 17
	"."            reduce using rule 17
	";"            reduce using rule 17


State 132

	Inst -> Assign .                                    (rule 18)

	end            reduce using rule 18
	","            reduce using rule 18
	"."            reduce using rule 18
	";"            reduce using rule 18


State 133

	Assign -> Lval . is Exp                             (rule 33)
	Lval -> Lval . "_" VarId                            (rule 35)
	Lval -> Lval . ":" Exp                              (rule 36)

	":"            shift, and enter state 158
	"_"            shift, and enter state 159
	is             shift, and enter state 160


State 134

	Lval -> VarId .                                     (rule 34)

	":"            reduce using rule 34
	"_"            reduce using rule 34
	end            reduce using rule 34
	","            reduce using rule 34
	"."            reduce using rule 34
	";"            reduce using rule 34
	is             reduce using rule 34


State 135

	Inst -> Call .                                      (rule 19)

	end            reduce using rule 19
	","            reduce using rule 19
	"."            reduce using rule 19
	";"            reduce using rule 19


State 136

	Inst -> If .                                        (rule 20)

	end            reduce using rule 20
	","            reduce using rule 20
	"."            reduce using rule 20
	";"            reduce using rule 20


State 137

	Inst -> Case .                                      (rule 21)

	end            reduce using rule 21
	","            reduce using rule 21
	"."            reduce using rule 21
	";"            reduce using rule 21


State 138

	Inst -> For .                                       (rule 22)

	end            reduce using rule 22
	","            reduce using rule 22
	"."            reduce using rule 22
	";"            reduce using rule 22


State 139

	Inst -> While .                                     (rule 23)

	end            reduce using rule 23
	","            reduce using rule 23
	"."            reduce using rule 23
	";"            reduce using rule 23


State 140

	For -> for . VarId Ranges end                       (rule 53)
	For -> for . Declaration Ranges end                 (rule 54)

	varId          shift, and enter state 17
	genId          shift, and enter state 11

	GenId          goto state 4
	Declaration    goto state 156
	Type           goto state 31
	VarId          goto state 157

State 141

	If -> if . Guards end                               (rule 43)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Guards         goto state 153
	Guard          goto state 154
	Exp            goto state 155
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 142

	While -> while . Conds end                          (rule 58)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Conds          goto state 150
	Cond           goto state 151
	Exp            goto state 152
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 143

	Case -> case . Exp of Sets end                      (rule 47)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 149
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 144

	Inst -> finish .                                    (rule 26)

	end            reduce using rule 26
	","            reduce using rule 26
	"."            reduce using rule 26
	";"            reduce using rule 26


State 145

	Inst -> read . Lval                                 (rule 24)

	varId          shift, and enter state 17

	Lval           goto state 148
	VarId          goto state 134

State 146

	Inst -> write . Exp                                 (rule 25)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 147
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 147

	Inst -> write Exp .                                 (rule 25)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 25
	","            reduce using rule 25
	"."            reduce using rule 25
	";"            reduce using rule 25


State 148

	Inst -> read Lval .                                 (rule 24)
	Lval -> Lval . "_" VarId                            (rule 35)
	Lval -> Lval . ":" Exp                              (rule 36)

	":"            shift, and enter state 158
	"_"            shift, and enter state 159
	end            reduce using rule 24
	","            reduce using rule 24
	"."            reduce using rule 24
	";"            reduce using rule 24


State 149

	Case -> case Exp . of Sets end                      (rule 47)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	of             shift, and enter state 181


State 150

	While -> while Conds . end                          (rule 58)
	Conds -> Conds . ";" Cond                           (rule 60)

	end            shift, and enter state 179
	";"            shift, and enter state 180


State 151

	Conds -> Cond .                                     (rule 59)

	end            reduce using rule 59
	";"            reduce using rule 59


State 152

	Cond -> Exp . "->" Insts                            (rule 61)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	"->"           shift, and enter state 178


State 153

	If -> if Guards . end                               (rule 43)
	Guards -> Guards . ";" Guard                        (rule 45)

	end            shift, and enter state 176
	";"            shift, and enter state 177


State 154

	Guards -> Guard .                                   (rule 44)

	end            reduce using rule 44
	";"            reduce using rule 44


State 155

	Guard -> Exp . "->" Insts                           (rule 46)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	"->"           shift, and enter state 175


State 156

	For -> for Declaration . Ranges end                 (rule 54)

	from           shift, and enter state 173

	Ranges         goto state 174
	Range          goto state 172

State 157

	For -> for VarId . Ranges end                       (rule 53)

	from           shift, and enter state 173

	Ranges         goto state 171
	Range          goto state 172

State 158

	Lval -> Lval ":" . Exp                              (rule 36)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 170
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 159

	Lval -> Lval "_" . VarId                            (rule 35)

	varId          shift, and enter state 17

	VarId          goto state 169

State 160

	Assign -> Lval is . Exp                             (rule 33)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 168
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 161

	Insts -> Insts "," . Inst                           (rule 15)

	for            shift, and enter state 140
	if             shift, and enter state 141
	while          shift, and enter state 142
	case           shift, and enter state 143
	finish         shift, and enter state 144
	read           shift, and enter state 145
	write          shift, and enter state 146
	varId          shift, and enter state 17
	genId          shift, and enter state 11

	GenId          goto state 127
	Inst           goto state 167
	Declaration    goto state 130
	Initialization goto state 131
	Type           goto state 7
	Assign         goto state 132
	Lval           goto state 133
	VarId          goto state 134
	Call           goto state 135
	If             goto state 136
	Case           goto state 137
	For            goto state 138
	While          goto state 139

State 162

	TopDec -> proc GenId "(" Params ")" ":-" Insts "." .    (rule 4)

	proc           reduce using rule 4
	either         reduce using rule 4
	record         reduce using rule 4
	genId          reduce using rule 4
	%eof           reduce using rule 4


State 163

	Call -> GenId "(" . Args ")"                        (rule 38)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	")"            reduce using rule 39
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Args           goto state 164
	Args1          goto state 165
	Exp            goto state 166
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 164

	Call -> GenId "(" Args . ")"                        (rule 38)

	")"            shift, and enter state 195


State 165

	Args -> Args1 .                                     (rule 40)
	Args1 -> Args1 . "," Exp                            (rule 42)

	","            shift, and enter state 194
	")"            reduce using rule 40


State 166

	Args1 -> Exp .                                      (rule 41)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	","            reduce using rule 41
	")"            reduce using rule 41


State 167

	Insts -> Insts "," Inst .                           (rule 15)

	end            reduce using rule 15
	","            reduce using rule 15
	"."            reduce using rule 15
	";"            reduce using rule 15


State 168

	Assign -> Lval is Exp .                             (rule 33)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 33
	","            reduce using rule 33
	"."            reduce using rule 33
	";"            reduce using rule 33


State 169

	Lval -> Lval "_" VarId .                            (rule 35)

	":"            reduce using rule 35
	"_"            reduce using rule 35
	end            reduce using rule 35
	","            reduce using rule 35
	"."            reduce using rule 35
	";"            reduce using rule 35
	is             reduce using rule 35


State 170

	Lval -> Lval ":" Exp .                              (rule 36)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            reduce using rule 36
	"_"            reduce using rule 36
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	end            reduce using rule 36
	","            reduce using rule 36
	"."            reduce using rule 36
	";"            reduce using rule 36
	is             reduce using rule 36


State 171

	For -> for VarId Ranges . end                       (rule 53)
	Ranges -> Ranges . ";" Range                        (rule 56)

	end            shift, and enter state 193
	";"            shift, and enter state 191


State 172

	Ranges -> Range .                                   (rule 55)

	end            reduce using rule 55
	";"            reduce using rule 55


State 173

	Range -> from . Exp to Exp "->" Insts               (rule 57)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 192
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 174

	For -> for Declaration Ranges . end                 (rule 54)
	Ranges -> Ranges . ";" Range                        (rule 56)

	end            shift, and enter state 190
	";"            shift, and enter state 191


State 175

	Guard -> Exp "->" . Insts                           (rule 46)

	for            shift, and enter state 140
	if             shift, and enter state 141
	while          shift, and enter state 142
	case           shift, and enter state 143
	finish         shift, and enter state 144
	read           shift, and enter state 145
	write          shift, and enter state 146
	varId          shift, and enter state 17
	genId          shift, and enter state 11

	GenId          goto state 127
	Insts          goto state 189
	Inst           goto state 129
	Declaration    goto state 130
	Initialization goto state 131
	Type           goto state 7
	Assign         goto state 132
	Lval           goto state 133
	VarId          goto state 134
	Call           goto state 135
	If             goto state 136
	Case           goto state 137
	For            goto state 138
	While          goto state 139

State 176

	If -> if Guards end .                               (rule 43)

	end            reduce using rule 43
	","            reduce using rule 43
	"."            reduce using rule 43
	";"            reduce using rule 43


State 177

	Guards -> Guards ";" . Guard                        (rule 45)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Guard          goto state 188
	Exp            goto state 155
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 178

	Cond -> Exp "->" . Insts                            (rule 61)

	for            shift, and enter state 140
	if             shift, and enter state 141
	while          shift, and enter state 142
	case           shift, and enter state 143
	finish         shift, and enter state 144
	read           shift, and enter state 145
	write          shift, and enter state 146
	varId          shift, and enter state 17
	genId          shift, and enter state 11

	GenId          goto state 127
	Insts          goto state 187
	Inst           goto state 129
	Declaration    goto state 130
	Initialization goto state 131
	Type           goto state 7
	Assign         goto state 132
	Lval           goto state 133
	VarId          goto state 134
	Call           goto state 135
	If             goto state 136
	Case           goto state 137
	For            goto state 138
	While          goto state 139

State 179

	While -> while Conds end .                          (rule 58)

	end            reduce using rule 58
	","            reduce using rule 58
	"."            reduce using rule 58
	";"            reduce using rule 58


State 180

	Conds -> Conds ";" . Cond                           (rule 60)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Cond           goto state 186
	Exp            goto state 152
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 181

	Case -> case Exp of . Sets end                      (rule 47)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Sets           goto state 182
	Exps           goto state 183
	Set            goto state 184
	Exp            goto state 185
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 182

	Case -> case Exp of Sets . end                      (rule 47)
	Sets -> Sets . ";" Set                              (rule 49)

	end            shift, and enter state 201
	";"            shift, and enter state 202


State 183

	Exps -> Exps . "," Exp                              (rule 51)
	Set -> Exps . "->" Insts                            (rule 52)

	","            shift, and enter state 199
	"->"           shift, and enter state 200


State 184

	Sets -> Set .                                       (rule 48)

	end            reduce using rule 48
	";"            reduce using rule 48


State 185

	Exps -> Exp .                                       (rule 50)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	","            reduce using rule 50
	"->"           reduce using rule 50


State 186

	Conds -> Conds ";" Cond .                           (rule 60)

	end            reduce using rule 60
	";"            reduce using rule 60


State 187

	Insts -> Insts . "," Inst                           (rule 15)
	Cond -> Exp "->" Insts .                            (rule 61)

	end            reduce using rule 61
	","            shift, and enter state 161
	";"            reduce using rule 61


State 188

	Guards -> Guards ";" Guard .                        (rule 45)

	end            reduce using rule 45
	";"            reduce using rule 45


State 189

	Insts -> Insts . "," Inst                           (rule 15)
	Guard -> Exp "->" Insts .                           (rule 46)

	end            reduce using rule 46
	","            shift, and enter state 161
	";"            reduce using rule 46


State 190

	For -> for Declaration Ranges end .                 (rule 54)

	end            reduce using rule 54
	","            reduce using rule 54
	"."            reduce using rule 54
	";"            reduce using rule 54


State 191

	Ranges -> Ranges ";" . Range                        (rule 56)

	from           shift, and enter state 173

	Range          goto state 198

State 192

	Range -> from Exp . to Exp "->" Insts               (rule 57)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	to             shift, and enter state 197


State 193

	For -> for VarId Ranges end .                       (rule 53)

	end            reduce using rule 53
	","            reduce using rule 53
	"."            reduce using rule 53
	";"            reduce using rule 53


State 194

	Args1 -> Args1 "," . Exp                            (rule 42)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 196
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 195

	Call -> GenId "(" Args ")" .                        (rule 38)

	end            reduce using rule 38
	","            reduce using rule 38
	"."            reduce using rule 38
	";"            reduce using rule 38


State 196

	Args1 -> Args1 "," Exp .                            (rule 42)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	","            reduce using rule 42
	")"            reduce using rule 42


State 197

	Range -> from Exp to . Exp "->" Insts               (rule 57)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 206
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 198

	Ranges -> Ranges ";" Range .                        (rule 56)

	end            reduce using rule 56
	";"            reduce using rule 56


State 199

	Exps -> Exps "," . Exp                              (rule 51)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exp            goto state 205
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 200

	Set -> Exps "->" . Insts                            (rule 52)

	for            shift, and enter state 140
	if             shift, and enter state 141
	while          shift, and enter state 142
	case           shift, and enter state 143
	finish         shift, and enter state 144
	read           shift, and enter state 145
	write          shift, and enter state 146
	varId          shift, and enter state 17
	genId          shift, and enter state 11

	GenId          goto state 127
	Insts          goto state 204
	Inst           goto state 129
	Declaration    goto state 130
	Initialization goto state 131
	Type           goto state 7
	Assign         goto state 132
	Lval           goto state 133
	VarId          goto state 134
	Call           goto state 135
	If             goto state 136
	Case           goto state 137
	For            goto state 138
	While          goto state 139

State 201

	Case -> case Exp of Sets end .                      (rule 47)

	end            reduce using rule 47
	","            reduce using rule 47
	"."            reduce using rule 47
	";"            reduce using rule 47


State 202

	Sets -> Sets ";" . Set                              (rule 49)

	not            shift, and enter state 42
	bnot           shift, and enter state 43
	length         shift, and enter state 44
	"-"            shift, and enter state 45
	otherwise      shift, and enter state 46
	toBoolean      shift, and enter state 47
	toCharacter    shift, and enter state 48
	toFloat        shift, and enter state 49
	toInteger      shift, and enter state 50
	"("            shift, and enter state 51
	boolLit        shift, and enter state 52
	charLit        shift, and enter state 53
	intLit         shift, and enter state 24
	floatLit       shift, and enter state 54
	stringLit      shift, and enter state 55
	varId          shift, and enter state 17

	VarId          goto state 35
	Exps           goto state 183
	Set            goto state 203
	Exp            goto state 185
	Bool           goto state 37
	Char           goto state 38
	Int            goto state 39
	Float          goto state 40
	String         goto state 41

State 203

	Sets -> Sets ";" Set .                              (rule 49)

	end            reduce using rule 49
	";"            reduce using rule 49


State 204

	Insts -> Insts . "," Inst                           (rule 15)
	Set -> Exps "->" Insts .                            (rule 52)

	end            reduce using rule 52
	","            shift, and enter state 161
	";"            reduce using rule 52


State 205

	Exps -> Exps "," Exp .                              (rule 51)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	","            reduce using rule 51
	"->"           reduce using rule 51


State 206

	Range -> from Exp to Exp . "->" Insts               (rule 57)
	Exp -> Exp . and Exp                                (rule 74)
	Exp -> Exp . andalso Exp                            (rule 75)
	Exp -> Exp . or Exp                                 (rule 76)
	Exp -> Exp . orelse Exp                             (rule 77)
	Exp -> Exp . xor Exp                                (rule 78)
	Exp -> Exp . band Exp                               (rule 80)
	Exp -> Exp . bor Exp                                (rule 81)
	Exp -> Exp . bsl Exp                                (rule 82)
	Exp -> Exp . bsr Exp                                (rule 83)
	Exp -> Exp . bxor Exp                               (rule 84)
	Exp -> Exp . ":" Exp                                (rule 86)
	Exp -> Exp . "_" Exp                                (rule 87)
	Exp -> Exp . "+" Exp                                (rule 89)
	Exp -> Exp . "-" Exp                                (rule 90)
	Exp -> Exp . "*" Exp                                (rule 91)
	Exp -> Exp . "/" Exp                                (rule 92)
	Exp -> Exp . div Exp                                (rule 93)
	Exp -> Exp . rem Exp                                (rule 94)
	Exp -> Exp . "<" Exp                                (rule 96)
	Exp -> Exp . "=<" Exp                               (rule 97)
	Exp -> Exp . ">" Exp                                (rule 98)
	Exp -> Exp . ">=" Exp                               (rule 99)
	Exp -> Exp . "=" Exp                                (rule 100)
	Exp -> Exp . "/=" Exp                               (rule 101)
	Exp -> Exp . "|" Exp                                (rule 102)
	Exp -> Exp . "!|" Exp                               (rule 103)

	and            shift, and enter state 67
	andalso        shift, and enter state 68
	or             shift, and enter state 69
	orelse         shift, and enter state 70
	xor            shift, and enter state 71
	band           shift, and enter state 72
	bor            shift, and enter state 73
	bsl            shift, and enter state 74
	bsr            shift, and enter state 75
	bxor           shift, and enter state 76
	":"            shift, and enter state 77
	"_"            shift, and enter state 78
	"+"            shift, and enter state 79
	"-"            shift, and enter state 80
	"*"            shift, and enter state 81
	"/"            shift, and enter state 82
	div            shift, and enter state 83
	rem            shift, and enter state 84
	"<"            shift, and enter state 85
	"=<"           shift, and enter state 86
	">"            shift, and enter state 87
	">="           shift, and enter state 88
	"="            shift, and enter state 89
	"/="           shift, and enter state 90
	"|"            shift, and enter state 91
	"!|"           shift, and enter state 92
	"->"           shift, and enter state 207


State 207

	Range -> from Exp to Exp "->" . Insts               (rule 57)

	for            shift, and enter state 140
	if             shift, and enter state 141
	while          shift, and enter state 142
	case           shift, and enter state 143
	finish         shift, and enter state 144
	read           shift, and enter state 145
	write          shift, and enter state 146
	varId          shift, and enter state 17
	genId          shift, and enter state 11

	GenId          goto state 127
	Insts          goto state 208
	Inst           goto state 129
	Declaration    goto state 130
	Initialization goto state 131
	Type           goto state 7
	Assign         goto state 132
	Lval           goto state 133
	VarId          goto state 134
	Call           goto state 135
	If             goto state 136
	Case           goto state 137
	For            goto state 138
	While          goto state 139

State 208

	Insts -> Insts . "," Inst                           (rule 15)
	Range -> from Exp to Exp "->" Insts .               (rule 57)

	end            reduce using rule 57
	","            shift, and enter state 161
	";"            reduce using rule 57


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 109
Number of terminals: 63
Number of non-terminals: 38
Number of states: 209
