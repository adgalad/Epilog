
record h :-
	integer x,
	char y,
	string a.

record bn :-
	integer x,
	char y,
	string str,
	h hola.

procedure main() :-
	float Y    is f(10),
	complex C1 is C(1,3),
	complex C2 is C(4,5),

	write(y),
	writef(f(9))
	float a_5 is [1,2,3,4,-1],
	for i from 0 to 4 ->
		write(a_i)
	end.

%% complex Numbers

record complex:-
	float Real,
	float Imaginary.

function C(float x, float y) -> complex:-
	complex c,
	c_real is x,
	c_imaginary is y,
	return c.

function sum(complex a, complex b) -> complex:-
	complex c,
	c_real      is a_real      + b_real,
	c_imaginary is a_imaginary + b_imaginary,
	return c.

function negative(complex a) -> complex:-
	complex c,
	c_real 		is -a_real,
	c_imaginary is -a_imaginary,
	return c.

function prod(complex a, complex b) -> complex:-
	complex c,
	c_real 		is (a_real * b_real) 	 + (a_imaginary * b_imaginary),
	c_imaginary is (a_real * b_imaginary) + (a_imaginary * b_real),
	return c.

%% Funciones
function f(integer X) -> integer:-
	%% stuffs
	boolean B is X < 10 and ((((true)))) and (true or (false) or (false and true)),
	if B ->
		writef("true\n"),
		integer X is 1 + 4 * (4 + 5),
		integer Z is -5,
		for I from 1 to 10 ->
			integer X is 4,
			integer Y is 5,
			X is X+Y+Z,
			print(X)
		end;
	otherwise ->
		if (not B) ->
			write("false\n"),
			return 10;
		otherwise ->
			write("Algo muy malo ocurrio\n"),
			integer Y is X - X,
			Y is Y/Y,
			return -121827397
		end
	end,
	return X.

%% Procedimientos
procedure q(integer X, integer Y, integer Z):-
	if Z > 0 ->
		X is X+10,
		Y is Z+Y,
		Z is Z-1,
		W is "a

		q(Y, X, Z)
	end.




















